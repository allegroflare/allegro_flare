properties:


  - name: design_pillars
    type: std::vector<AllegroFlare::DesignSystems::DesignPillar>
    init_with: '{}'


methods:


  - name: build_distributions
    type: std::vector<AllegroFlare::DesignSystems::DesignPillarDistribution>
    body: |
      std::vector<AllegroFlare::DesignSystems::DesignPillarDistribution> result;

      std::vector<std::string> primary_source_list = build_source_list();
      std::vector<std::string> secondary_source_list = build_source_list();
      std::vector<std::string> tertiary_source_list = build_source_list();

      // 1) Number of levels is source_list.size() / 3
      // 2) Each distribution

      return result;


  - name: build_source_list
    type: std::vector<std::string>
    body: |
      std::vector<std::string> result = {
         "Ambience",
         "Action",
         "Friction",
         "Growing Excitement",
         "Cognative Puzzle Solving",
         "Rest",
         "Story",
         "Searching and Discovery (for key)",
         "Aquisition of Wealth/Experience (grinding)",
      };
      return result;


dependencies:


  - symbol: AllegroFlare::Random
    headers: [ AllegroFlare/Random.hpp ]
  - symbol: AllegroFlare::DesignSystems::DesignPillarDistribution
    headers: [ AllegroFlare/DesignSystems/DesignPillarDistribution.hpp ]
  - symbol: AllegroFlare::DesignSystems::DesignPillar
    headers: [ AllegroFlare/DesignSystems/DesignPillar.hpp ]


