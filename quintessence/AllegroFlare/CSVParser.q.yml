properties:


  - name: raw_csv_content
    type: std::string
    constructor_arg: true
    init_with: '"[unset-csv_content]"'

  - name: parsed_content
    type: std::vector<std::vector<std::string>>
    init_with: '{}'
    getter: true


enums:


  - class: ParseState
    enumerators:
       - NORMAL
       - INSIDE_QUOTES


methods:


  - name: parse
    body: |
      std::stringstream ss;
      ss.str(raw_csv_content);
      int line_num = 0;
      std::string line;
      while (std::getline(ss, line))
      {
         std::cout << line << std::endl;
         line_num++;
      }
      return;
    body_dependency_symbols:
      - std::cout


  - name: parse_row
    parameters:
      - name: line
        type: std::string
        default_argument: '"[unset-line]"'
    type: std::vector<std::string>
    body: |
      ParseState state = ParseState::NORMAL;
      std::string token;
      std::vector<std::string> tokens;

      for (char ch : line)
      {
         switch (state)
         {
            case ParseState::NORMAL: {
               if (ch == '"') {
                  state = ParseState::INSIDE_QUOTES;
               } else if (ch == ',') {
                  // Process the token
                  tokens.push_back(token);
                  token.clear();
               } else {
                  token += ch;
               }
               break;
            } break;

            case ParseState::INSIDE_QUOTES: {
               if (ch == '"') {
                  state = ParseState::NORMAL;
               } else {
                  token += ch;
               }
               break;
            } break;
         }
      }

      // Process the last token
      tokens.push_back(token);

      return tokens;
    body_dependency_symbols:
      - std::stringstream
      - std::vector


