parent_classes:


  - class: AllegroFlare::Shader
    scope: public
    init_with: "vertex_source_code, fragment_source_code"


properties:


  - name: type
    type: std::string
    init_with: AllegroFlare::Shaders::Base::TYPE
    constructor_arg: true
    getter: true

  - name: vertex_source_code
    type: std::string
    init_with: '""'
    constructor_arg: true

  - name: fragment_source_code
    type: std::string
    init_with: '""'
    constructor_arg: true

  - name: TYPE
    type: char*
    init_with: '(char*)"AllegroFlare/Shaders/Base"'
    static: true
    constexpr: true


functions:


  - name: is_type
    type: bool
    parameters:
      - name: possible_type
        type: std::string
        default_argument: '""'
    body: |
      return (possible_type == get_type());


  - name: hotload
    parameters:
      - name: vertex_source_code
        type: std::string
        default_argument: '""'
      - name: fragment_source_code
        type: std::string
        default_argument: '""'
    guards: [ initialized ]
    body: |
      al_use_shader(nullptr); // TODO: only disable the shader if it is the currently active one. Restore otherwise
                              // TODO: consider doing the thing

      // Destroy our current shader
      // TODO: determine if the shader can actually be re-used
      if (shader)
      {
         al_destroy_shader(shader);
         shader = nullptr;
      }
      shader = al_create_shader(ALLEGRO_SHADER_GLSL);
      if (!shader) throw std::runtime_error("Could not create Shader");

      // set our local copy of the code
      this->vertex_source_code = vertex_source_code;
      this->fragment_source_code = fragment_source_code;

      // set our base copy of the code
      // TODO: after flattening AllegroFlare::Shader into AllegroFlare::Shaders::Base, this line should be removed
      AllegroFlare::Shader::vertex_source_code = vertex_source_code;
      AllegroFlare::Shader::fragment_source_code = fragment_source_code;

      attach_source_code(false);
      build();

      return;


dependencies:


  - symbol: AllegroFlare::Shader
    headers: [ AllegroFlare/Shader.hpp ]


