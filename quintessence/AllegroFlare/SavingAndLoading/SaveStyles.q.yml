properties:


  - name: game_start_style
    type: AllegroFlare::SavingAndLoading::SaveStyles::StartStyle
    init_with: AllegroFlare::SavingAndLoading::SaveStyles::StartStyle::GAME_START_STYLE_UNDEF
    getter: true
    setter: before_initialized

  - name: in_game_save_style
    type: AllegroFlare::SavingAndLoading::SaveStyles::SaveStyle
    init_with: AllegroFlare::SavingAndLoading::SaveStyles::SaveStyle::GAME_SAVE_STYLE_UNDEF
    getter: true
    setter: before_initialized

  - name: in_game_load_style
    type: AllegroFlare::SavingAndLoading::SaveStyles::LoadStyle
    init_with: AllegroFlare::SavingAndLoading::SaveStyles::LoadStyle::GAME_LOAD_STYLE_UNDEF
    getter: true
    setter: before_initialized

  - name: initialized
    type: bool
    init_with: false
    getter: true


enums:


  - class: StartStyle
    scope: public
    enumerators:
      - GAME_START_STYLE_UNDEF
      - GAME_START_STYLE_A
      - GAME_START_STYLE_B
      - GAME_START_STYLE_C
      - GAME_START_STYLE_D
      - GAME_START_STYLE_E
      - GAME_START_STYLE_F
      - GAME_START_STYLE_G


  - class: SaveStyle
    scope: public
    enumerators:
      - GAME_SAVE_STYLE_UNDEF
      - GAME_SAVE_STYLE_1
      - GAME_SAVE_STYLE_2
      - GAME_SAVE_STYLE_3
      - GAME_SAVE_STYLE_4
      - GAME_SAVE_STYLE_5
      - GAME_SAVE_STYLE_6
      - GAME_SAVE_STYLE_7
      - GAME_SAVE_STYLE_8
      - GAME_SAVE_STYLE_9


  - class: LoadStyle
    scope: public
    enumerators:
      - GAME_LOAD_STYLE_UNDEF
      - GAME_LOAD_STYLE_1
      - GAME_LOAD_STYLE_2
      - GAME_LOAD_STYLE_3
      - GAME_LOAD_STYLE_4
      - GAME_LOAD_STYLE_5
      - GAME_LOAD_STYLE_6
      - GAME_LOAD_STYLE_7
      - GAME_LOAD_STYLE_8


methods:


  - name: obtain_context_sensitive_menu_items_for_starting_or_loading_the_game
    type: std::vector<std::pair<std::string, std::string>>
    guards: [ initialized ]
    body: |
      std::vector<std::pair<std::string, std::string>> game_start_options = {



         // Start style A (Metroid Prime):
         //{ "Play",              "goto_load_a_saved_game_screen" },



         // Start style B (Fade to White) (with no saves)
         //{ "Start new game",    "continue_from_last_save" },

         // Start style B (Fade to White) (with existing saves)
         //{ "Continue",          "..." }, // Loads the most recent save, Will advance to wherever the game wants
         //{ "Start new game",    "..." }, // Will prompt to erase all save data



         // Start style C (Zelda:BOTW) (with no saves)
         //{ "Start new game",    "..." },

         // Start style C (Zelda:BOTW) (with existing saves)
         //{ "Continue",          "..." }, // Will advance to the load_a_saved_game_screen (with list of recent saves)
         //{ "Start new game",    "..." }, // Will prompt to erase all save data



         // Start style D (Tunic) (with no saves) (This is the same as Start Style A, but with convenience),
                                                  // Tunic has up to 10 save slots
         //{ "Start new game",    "..." },

         // Start style D (Tunic) (with existing saves)
         //{ "Continue",          "..." }, // Will load the most recent save, from the most recent profile
         //{ "New game",          "..." },
         //{ "Load game",         "..." },



         // Start style E (Final Fantasy), same as Start Style D, but there are many save slots



         // Start style F (Mega Man)
         //{ "Start game",        "..." },
         //{ "Enter passcode",    "..." },



         // Start style G (Signalis, Wolfenstein II: The New Colossus)
         //{ "Start game",        "..." }, // Will continue from last most recent save on this profile
         //{ "Change profile",    "..." },



      };
      return game_start_options;


dependencies:


  - symbol: AllegroFlare::SavingAndLoading::SaveStyles::StartStyle
    headers: []
  - symbol: AllegroFlare::SavingAndLoading::SaveStyles::LoadStyle
    headers: []
  - symbol: AllegroFlare::SavingAndLoading::SaveStyles::SaveStyle
    headers: []


