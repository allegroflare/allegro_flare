properties:


  - name: started_at
    type: float
    init_with: 0.0f
    getter: true

  - name: ended_at
    type: float
    init_with: 0.0f
    getter: true

  - name: active
    type: bool
    init_with: false
    getter: true

  - name: playtime_tracker
    type: AllegroFlare::PlaytimeTracker
    init_with: ''
    getter_ref: true

  - name: game_progress_and_state_info
    type: AllegroFlare::GameProgressAndStateInfos::Base*
    init_with: nullptr
    getter: true
    setter: true


methods:


  - name: start_or_resume_playtime_tracking
    guards: [ active ]
    body: |
      AllegroFlare::Logger::info_from(THIS_CLASS_AND_METHOD_NAME, "Starting (or resuming) playtime tracking.");
      playtime_tracker.start();
      return;


  - name: suspend_playtime_tracking
    guards: [ active ]
    body: |
      AllegroFlare::Logger::info_from(THIS_CLASS_AND_METHOD_NAME, "Suspending playtime tracking.");
      playtime_tracker.pause();
      return;


  - name: save
    guards: [ active, game_progress_and_state_info ]
    body: |
      AllegroFlare::Logger::info_from(THIS_CLASS_AND_METHOD_NAME, "Saving game progress...");
      game_progress_and_state_info->save();
      AllegroFlare::Logger::info_from(THIS_CLASS_AND_METHOD_NAME, "...game progress saved successfully.");
      return;


  - name: start_session
    parameters:
      - name: started_at
        type: float
        default_argument: al_get_time()
        default_argument_dependency_symbols: [ al_get_time ]
    guards: [ (!active) ]
    body: |
      AllegroFlare::Logger::info_from(THIS_CLASS_AND_METHOD_NAME, "Starting session.");
      active = true;
      this->started_at = started_at;
      return;
    body_dependency_symbols:
      - AllegroFlare::Logger


  - name: end_session
    parameters:
      - name: ended_at
        type: float
        default_argument: al_get_time()
        default_argument_dependency_symbols: [ al_get_time ]
    guards: [ active ]
    body: |
      AllegroFlare::Logger::info_from(THIS_CLASS_AND_METHOD_NAME, "Ending session.");
      active = false;
      this->ended_at = ended_at;
      return;


  - name: is_active
    type: bool
    body: |
      return active;


dependencies:


  - symbol: ALLEGRO_BITMAP
    headers: [ allegro5/allegro.h ]
  - symbol: al_get_time
    headers: [ allegro5/allegro.h ]
  - symbol: AllegroFlare::Logger
    headers: [ AllegroFlare/Logger.hpp ]
  - symbol: AllegroFlare::GameProgressAndStateInfos::Base
    headers: [ AllegroFlare/GameProgressAndStateInfos/Base.hpp ]
  - symbol: AllegroFlare::PlaytimeTracker
    headers: [ AllegroFlare/PlaytimeTracker.hpp ]


