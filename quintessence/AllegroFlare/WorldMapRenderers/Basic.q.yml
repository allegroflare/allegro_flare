properties:


  - name: bitmap_bin
    type: AllegroFlare::BitmapBin*
    init_with: nullptr
    constructor_arg: true

  - name: font_bin
    type: AllegroFlare::FontBin*
    init_with: nullptr
    constructor_arg: true

  - name: map
    type: AllegroFlare::WorldMaps::Maps::Basic*
    init_with: nullptr
    constructor_arg: true
    getter: true
    setter: true

  - name: quote
    type: std::string
    init_with: '"Hello!"'
    constructor_arg: true


methods:


  - name: draw_point
    parameters:
      - name: x
        type: float
        default_argument: 0.0f
      - name: y
        type: float
        default_argument: 0.0f
      - name: point_color
        type: ALLEGRO_COLOR
        default_argument: ALLEGRO_COLOR{0.96, 0.89, 0.5, 1.0}
    body: |
      float size = 20;
      ALLEGRO_COLOR outline_color = ALLEGRO_COLOR{0.2, 0.18, 0.0, 1.0}; // A dark brown color
      al_draw_filled_circle(x, y, size * 0.5, point_color);
      al_draw_circle(x, y, size * 0.5, outline_color, 3.0f);
      return;


  - name: render_location
    parameters:
      - name: location
        type: AllegroFlare::WorldMaps::Locations::Base*
        default_argument: nullptr
    guards: [ location ]
    body: |
      if (location->is_type(AllegroFlare::WorldMaps::Locations::Basic::TYPE))
      {
         AllegroFlare::WorldMaps::Locations::Basic *as =
            static_cast<AllegroFlare::WorldMaps::Locations::Basic*>(location);
         draw_point(as->get_x(), as->get_y(), ALLEGRO_COLOR{0.96, 0.89, 0.5, 1.0});
      }
      else if (location->is_type(AllegroFlare::WorldMaps::Locations::Player::TYPE))
      {
         AllegroFlare::WorldMaps::Locations::Player *as =
            static_cast<AllegroFlare::WorldMaps::Locations::Player*>(location);
         draw_point(as->get_x(), as->get_y(), ALLEGRO_COLOR{0.42, 0.69, 0.965, 1.0});
      }
      else
      {
         AllegroFlare::Logger::throw_unhandled_case(
            "AllegroFlare::WorldMapRenderers::Basic::render_location",
            location->get_type()
         );
      }
      return;
    body_dependency_symbols:
      - AllegroFlare::WorldMaps::Locations::Basic
      - AllegroFlare::WorldMaps::Locations::Player
      - AllegroFlare::Logger


  - name: render
    type: void
    guards:
      - al_is_system_installed()
      - al_is_primitives_addon_initialized()
      - al_is_font_addon_initialized()
      - bitmap_bin
      - font_bin
      - map
    body: |
      // Draw the background
      al_draw_bitmap(obtain_background_image(), 0, 0, 0);

      // background_image_identifier
      for (auto &location : map->get_locations())
      {
         render_location(location.second);
      }
      return;
      return;
    body_dependency_symbols:
      - AllegroFlare::Vec2D
      - al_draw_rounded_rectangle
      - al_draw_text


  - name: obtain_font
    private: true
    type: ALLEGRO_FONT*
    body: |
      return font_bin->auto_get("Inter-Medium.ttf -52");


  - name: obtain_background_image
    private: true
    type: ALLEGRO_BITMAP*
    body: |
      return bitmap_bin->auto_get(map->get_background_image_identifier());


dependencies:


  - symbol: AllegroFlare::BitmapBin
    headers: [ AllegroFlare/BitmapBin.hpp ]
  - symbol: AllegroFlare::FontBin
    headers: [ AllegroFlare/FontBin.hpp ]
  - symbol: ALLEGRO_BITMAP
    headers: [ allegro5/allegro.h ]
  - symbol: ALLEGRO_FONT
    headers: [ allegro5/allegro_font.h ]
  - symbol: ALLEGRO_COLOR
    headers: [ allegro5/allegro.h ]
  - symbol: al_draw_text
    headers: [ allegro5/allegro_font.h ]
  - symbol: al_draw_rounded_rectangle
    headers: [ allegro5/allegro_primitives.h ]
  - symbol: AllegroFlare::Vec2D
    headers: [ AllegroFlare/Vec2D.hpp ]
  - symbol: AllegroFlare::WorldMaps::Locations::Base
    headers: [ AllegroFlare/WorldMaps/Locations/Base.hpp ]
  - symbol: AllegroFlare::WorldMaps::Locations::Basic
    headers: [ AllegroFlare/WorldMaps/Locations/Basic.hpp ]
  - symbol: AllegroFlare::WorldMaps::Locations::Player
    headers: [ AllegroFlare/WorldMaps/Locations/Player.hpp ]
  - symbol: AllegroFlare::Logger
    headers: [ AllegroFlare/Logger.hpp ]
  - symbol: AllegroFlare::WorldMaps::Maps::Basic
    headers: [ AllegroFlare/WorldMaps/Maps/Basic.hpp ]


