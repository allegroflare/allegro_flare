properties:


  - name: started_at
    type: double
    init_with: 0.0
    constructor_arg: true
    getter: true
    setter: true

  - name: playhead
    type: double
    init_with: 0.0

  - name: rate
    type: double
    init_with: 1.0
    getter: true

  - name: last_rate_changed_at
    type: double
    init_with: 0.0


methods:


  - name: universal_absolute_now
    static: true
    type: double
    guards: [ al_is_system_installed() ]
    body: |
      return al_get_time();
    body_dependency_symbols:
      - al_is_system_installed


  - name: now
    type: double
    parameters:
      - name: time_now
        type: double
        default_argument: 'AllegroFlare::Time::universal_absolute_now()'
    body: |
      double rate_window_age = time_now - last_rate_changed_at;
      std::cout << "rate_window_age: " << rate_window_age << std::endl;
      playhead += (rate_window_age * rate);
      return playhead;
    body_dependency_symbols:
      - al_is_system_installed


  - name: jump_ahead_sec
    parameters:
      - name: distance
        type: double
        default_argument: 0.0f
    guards: [ distance >= 0.0 ]
    body: |
      // TODO: Consider and account for possible overflows
      playhead += distance;


  - name: set_rate
    parameters:
      - name: rate
        type: double
        default_argument: 1.0f
      - name: time_now
        type: double
        default_argument: 'AllegroFlare::Time::universal_absolute_now()'
    guards: [ rate >= 0.0001 ]
    body: |
      last_rate_changed_at = time_now;
      this->rate = rate;
      return;


  - name: calculate_age
    static: true
    type: double
    parameters:
      - name: time_now
        type: double
        default_argument: 0.0f
      - name: time_begin
        type: double
        default_argument: 0.0f
    body: |
      return time_now - time_begin;


dependencies:


  - symbol: al_is_system_installed
    headers: [ allegro5/allegro.h ]


