properties:


  - name: font_bin
    type: AllegroFlare::FontBin*
    init_with: nullptr
    constructor_arg: true
    getter: true
    setter: true

  - name: keyboard_key_str
    type: std::string
    init_with: '"[unset-keyboard_key]"'
    constructor_arg: true
    getter: true
    setter: true

  - name: color
    type: ALLEGRO_COLOR
    init_with: ALLEGRO_COLOR{1, 1, 1, 1}
    constructor_arg: true
    getter: true
    setter: true

  - name: x
    type: float
    init_with: 0.0f
    constructor_arg: true
    getter: true
    setter: true

  - name: y
    type: float
    init_with: 0.0f
    constructor_arg: true
    getter: true
    setter: true

  - name: keyboard_key_box_height
    type: float
    init_with: 42
    constructor_arg: true
    getter: true
    setter: true

  - name: keyboard_key_box_min_width
    type: float
    init_with: 42
    constructor_arg: true
    getter: true
    setter: true


functions:


  - name: render
    type: float
    parameters:
      - name: calculate_width_only_and_do_not_draw
        type: bool
        default_argument: false
    guards:
      - al_is_system_installed()
      - al_is_font_addon_initialized()
      - al_is_ttf_addon_initialized()
      - al_is_primitives_addon_initialized()
    body: |
      ALLEGRO_FONT *font = obtain_font();
      float padding_x = 12;
      float text_width = al_get_text_width(font, keyboard_key_str.c_str());
      float box_width = std::max(keyboard_key_box_min_width, text_width + padding_x*2);
      if (calculate_width_only_and_do_not_draw) return box_width;
      float roundness = 4;
      float line_thickness = 1.5;
      float font_ascent_height = al_get_font_line_height(font);

      al_draw_rounded_rectangle(
         x + 0,
         y + 0,
         box_width,
         get_keyboard_key_box_height(),
         roundness,
         roundness,
         color,
         line_thickness
      );
      al_draw_text(
         font,
         color,
         (int)(x + box_width / 2),
         (int)(y + keyboard_key_box_height / 2 - font_ascent_height / 2),
         ALLEGRO_ALIGN_CENTER,
         keyboard_key_str.c_str()
      );

      return box_width;
    body_dependency_symbols:
      - al_is_system_installed
      - al_is_font_addon_initialized
      - al_is_ttf_addon_initialized
      - al_is_primitives_addon_initialized
      - al_draw_rounded_rectangle
      - al_draw_text


  - name: calculate_width
    type: float
    body: |
      return render(true);


  - name: obtain_font
    private: true
    type: ALLEGRO_FONT*
    guards: [ font_bin ]
    body: |
      std::string font_name = "Inter-Medium.ttf";
      int font_size = -20;

      std::stringstream composite_font_str;
      composite_font_str << font_name << " " << font_size;
      return font_bin->auto_get(composite_font_str.str());


dependencies:


  - symbol: AllegroFlare::FontBin*
    headers: [ AllegroFlare/FontBin.hpp ]
  - symbol: ALLEGRO_COLOR
    headers: [ allegro5/allegro.h ]
  - symbol: ALLEGRO_FONT*
    headers: [ allegro5/allegro_font.h ]
  - symbol: al_is_system_installed
    headers: [ allegro5/allegro.h ]
  - symbol: al_is_font_addon_initialized
    headers: [ allegro5/allegro_font.h ]
  - symbol: al_is_ttf_addon_initialized
    headers: [ allegro5/allegro_ttf.h ]
  - symbol: al_is_primitives_addon_initialized
    headers: [ allegro5/allegro_primitives.h ]
  - symbol: al_draw_rounded_rectangle
    headers: [ allegro5/allegro_primitives.h ]
  - symbol: al_draw_text
    headers: [ allegro5/allegro_font.h ]


