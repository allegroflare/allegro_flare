properties:


  - name: type
    type: std::string
    init_with: AllegroFlare::DialogSystemDrivers::Base::TYPE
    constructor_arg: true
    getter: true

  - name: TYPE
    type: char*
    init_with: '(char*)"AllegroFlare/DialogSystemDrivers/Base"'
    static: true
    constexpr: true


methods:


  - name: on_switch_in
    virtual: true
    body: |
      return;


  - name: on_switch_out
    virtual: true
    body: |
      // Rename this to "on_switch_out"
      return;


  - name: on_load_node_bank_from_file
    type: bool
    virtual: true
    parameters:
      - name: filename
        type: std::string
        default_argument: '"[unset-filename]"'
      - name: node_bank_to_load_into
        type: AllegroFlare::DialogTree::NodeBank*
        default_argument: nullptr
    body: |
      // TODO: Consider if returning true is a good idea here for the base class
      return true;


  - name: on_render
    virtual: true
    body: |
      return;


  - name: on_before_spawn_basic_dialog
    virtual: true
    parameters:
      - name: speaking_character_identifier
        type: std::string
        default_argument: '"[unset-speaking_character_identifier]"'
    body: |
      // TODO: This method, modify speaking character
      return;


  - name: on_before_spawn_choice_dialog
    virtual: true
    parameters:
      - name: speaking_character_identifier
        type: std::string
        default_argument: '"[unset-speaking_character_identifier]"'
    body: |
      // TODO: This method, modify speaking character
      return;


  - name: enter_character
    virtual: true
    parameters:
      - name: character_identifier
        type: std::string
        default_argument: '"[unset-character_identifier]"'
    body: |
      return;


  - name: exit_character
    virtual: true
    parameters:
      - name: character_identifier
        type: std::string
        default_argument: '"[unset-character_identifier]"'
    body: |
      // HERE
      return;


  - name: on_raw_script_line_activate
    virtual: true
    parameters:
      - name: dialog_system
        type: AllegroFlare::DialogSystem::DialogSystem*
        default_argument: nullptr
      - name: activating_node_name
        type: std::string
        default_argument: '"[unset-activating_node_name]"'
      - name: activating_node
        type: AllegroFlare::DialogTree::Nodes::Base*
        default_argument: nullptr
      - name: user_data
        type: void*
        default_argument: nullptr
    body: |
      // TODO: Consider renaming this for clarity
      // TODO: Consider if this method needs to be removed or modififed
      return;


  - name: on_raw_script_line_finished
    virtual: true
    parameters:
      - name: dialog_system
        type: AllegroFlare::DialogSystem::DialogSystem*
        default_argument: nullptr
      - name: active_dialog_box
        type: AllegroFlare::Elements::DialogBoxes::Base*
        default_argument: nullptr
      - name: active_dialog_node
        type: AllegroFlare::DialogTree::Nodes::Base*
        default_argument: nullptr
    body: |
      // TODO: Consider renaming this for clarity
      // TODO: Consider if this method needs to be removed or modififed
      return;


  - name: on_activate_dialog_node_type_unhandled
    type: bool
    virtual: true
    parameters:
      - name: dialog_system
        type: AllegroFlare::DialogSystem::DialogSystem*
        default_argument: nullptr
      - name: active_dialog_node_name
        type: std::string
        default_argument: '""'
      - name: active_dialog_node
        type: AllegroFlare::DialogTree::Nodes::Base*
        default_argument: nullptr
    body: |
      return false;


  - name: decorate_speaking_character_name
    type: std::string
    virtual: true
    parameters:
      - name: speaking_character_identifier
        type: std::string
        default_argument: '"[unset-speaking_character_identifier]"'
    body: |
      return speaking_character_identifier;


  - name: is_type
    type: bool
    parameters:
      - name: possible_type
        type: std::string
        default_argument: '""'
    body: |
      return (possible_type == get_type());


dependencies:


  - symbol: AllegroFlare::DialogSystem::DialogSystem
    headers: [ AllegroFlare/ForwardDeclarations/AllegroFlare/DialogSystem/DialogSystem.hpp ]
  - symbol: AllegroFlare::DialogTree::Nodes::Base
    headers: [ AllegroFlare/DialogTree/Nodes/Base.hpp ]
  - symbol: AllegroFlare::Elements::DialogBoxes::Base
    headers: [ AllegroFlare/Elements/DialogBoxes/Base.hpp ]
  - symbol: AllegroFlare::DialogTree::NodeBank
    headers: [ AllegroFlare/DialogTree/NodeBank.hpp ]


