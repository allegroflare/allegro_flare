properties:


  - name: bitmap
    type: ALLEGRO_BITMAP*
    init_with: nullptr
    constructor_arg: true
    getter: true
    setter: true

  - name: index
    type: std::map<int, AllegroFlare::MultiMeshUV>
    init_with: '{}'
    constructor_arg: true
    getter: true
    setter: true


functions:


  - name: add
    parameters:
      - name: index_num
        type: int
        default_argument: 0
      - name: u1
        type: float
        default_argument: 0.0f
      - name: v1
        type: float
        default_argument: 0.0f
      - name: u2
        type: float
        default_argument: 1.0f
      - name: v2
        type: float
        default_argument: 1.0f
    body: |
      index[index_num] = AllegroFlare::MultiMeshUV(u1, v1, u2, v2);
      return;


  - name: exists
    type: bool
    parameters:
      - name: index_num
        type: int
        default_argument: 0
    body: |
      return (index.count(index_num) == 1);


  - name: get
    type: AllegroFlare::MultiMeshUV
    parameters:
      - name: index_num
        type: int
        default_argument: 0
    body: |
      if (!exists(index_num))
      {
         std::stringstream error_message;
         error_message << "AllegroFlare::MultiMeshUVAtlas::get error: "
                       << "Item does not exist at index_num " << index_num << ". Returning a default MultiMeshUV.";
         std::cout << error_message.str() << std::endl;
         return AllegroFlare::MultiMeshUV();
      }
      return index[index_num];
    body_dependency_symbols:
      - std::stringstream
      - std::cout


dependencies:


  - symbol: std::map<int, AllegroFlare::MultiMeshUV>
    headers: [ map, AllegroFlare/MultiMeshUV.hpp ]
  - symbol: AllegroFlare::MultiMeshUV
    headers: [ AllegroFlare/MultiMeshUV.hpp ]
  - symbol: ALLEGRO_BITMAP*
    headers: [ allegro5/allegro.h ]
 

