parent_classes:


  - class: ::testing::Test
    scope: public
    init_with: ''


properties:


  - name: global_abort
    type: std::atomic<bool>
    init_with: false


functions:


  - name: get_global_abort_ptr
    type: std::atomic<bool>*
    body: |
      return &global_abort;


  - name: SetUp
    type: void
    virtual: true
    override: true
    body: |
      return;
    body_dependency_symbols: []


  - name: TearDown
    type: void
    virtual: true
    override: true
    body: |
      return;


  - name: run_server_blocking
    static: true
    type: void
    parameters:
      - name: global_abort
        type: std::atomic<bool>*
        default_argument: nullptr
    body: |
      AllegroFlare::Network2::Server server(global_abort);
      server.run_blocking_while_awaiting_abort();
      return;
    body_dependency_symbols:
      - AllegroFlare::Network2::Server


  - name: run_client_blocking
    static: true
    type: void
    parameters:
      - name: global_abort
        type: std::atomic<bool>*
        default_argument: nullptr
    body: |
      std::vector<std::string> messages_queue;
      std::mutex messages_queue_mutex;
      AllegroFlare::Network2::Client client(global_abort, &messages_queue, &messages_queue_mutex);
      client.run_blocking_while_awaiting_abort();
      return;
    body_dependency_symbols:
      - AllegroFlare::Network2::Client


dependencies:


  - symbol: std::atomic<bool>
    headers: [ atomic ]
  - symbol: std::atomic<bool>*
    headers: [ atomic ]
  - symbol: ::testing::Test
    headers: [ gtest/gtest.h ]
  - symbol: AllegroFlare::Network2::Client
    headers: [ AllegroFlare/Network2/Client.hpp ]
  - symbol: AllegroFlare::Network2::Server
    headers: [ AllegroFlare/Network2/Server.hpp ]


