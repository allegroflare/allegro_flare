properties:


  - name: type
    type: std::string
    init_with: AllegroFlare::RenderSurfaces::Base::TYPE
    constructor_arg: true
    getter: true

  - name: TYPE
    type: char*
    init_with: '(char*)"RenderSurfaces/Base"'
    static: true
    constexpr: true


functions:


  - name: set_as_target
    pure_virtual: true
    virtual: true
    type: bool
    body: |
      return true;


  - name: obtain_surface
    pure_virtual: true
    virtual: true
    type: ALLEGRO_BITMAP*
    body: |
      return nullptr;


  - name: is_target
    type: bool
    body: |
      return (al_get_target_bitmap() == obtain_surface());


  - name: get_width
    pure_virtual: true
    virtual: true
    type: int
    body: |
      return 0;


  - name: get_height
    pure_virtual: true
    virtual: true
    type: int
    body: |
      return 0;


  - name: get_center
    type: float
    body: |
      return get_width() * 0.5f;


  - name: get_middle
    type: float
    body: |
      return get_height() * 0.5f;


  - name: is_type
    type: bool
    parameters:
      - name: possible_type
        type: std::string
        default_argument: '""'
    body: |
      return (possible_type == get_type());


  - name: is_a_display_surface
    type: bool
    body: |
      ALLEGRO_BITMAP *parent = al_get_parent_bitmap(obtain_surface());
      ALLEGRO_BITMAP *sanitized = parent ? parent : obtain_surface();

      // NOTE: This technique below is not 100% accurate, specifically if there are multiple displays.
      // TODO: Update this to consider multiple displays
      return (sanitized == al_get_backbuffer(al_get_current_display()));


dependencies:


  - symbol: ALLEGRO_BITMAP
    headers: [ allegro5/allegro.h ]


