functions:


  - name: build_error_message
    static: true
    parameters:
      - name: from
        type: std::string
        default_argument: '"[unset-from]"'
      - name: message
        type: std::string
        default_argument: '"[unset-message]"'
    type: std::string
    body: |
      const std::string CONSOLE_COLOR_RED = "\033[1;31m";
      const std::string CONSOLE_COLOR_DEFAULT = "\033[0m";
      std::stringstream result;
      result << CONSOLE_COLOR_RED << "[" << from << "]: error: " << message << CONSOLE_COLOR_DEFAULT << std::endl;
      return result.str();
    body_dependency_symbols:
      - std::stringstream


  - name: build_warning_message
    static: true
    parameters:
      - name: from
        type: std::string
        default_argument: '"[unset-from]"'
      - name: message
        type: std::string
        default_argument: '"[unset-message]"'
    type: std::string
    body: |
      const std::string CONSOLE_COLOR_YELLOW = "\033[1;33m";
      const std::string CONSOLE_COLOR_DEFAULT = "\033[0m";
      std::stringstream result;
      result << CONSOLE_COLOR_YELLOW << "[" << from << "]: warning: " << message << CONSOLE_COLOR_DEFAULT;
      return result.str();
    body_dependency_symbols:
      - std::stringstream


  - name: build_info_message
    static: true
    parameters:
      - name: from
        type: std::string
        default_argument: '"[unset-from]"'
      - name: message
        type: std::string
        default_argument: '"[unset-message]"'
    type: std::string
    body: |
      const std::string CONSOLE_COLOR_CYAN = "\033[1;36m";
      const std::string CONSOLE_COLOR_DEFAULT = "\033[0m";
      std::stringstream result;
      result << CONSOLE_COLOR_CYAN << "[" << from << "]: info: " << message << CONSOLE_COLOR_DEFAULT << std::endl;
      return result.str();
    body_dependency_symbols:
      - std::stringstream


  - name: throw_missing_file_error
    static: true
    parameters:
      - name: from
        type: std::string
        default_argument: '"[unset-from]"'
      - name: filename
        type: std::string
        default_argument: '"[unset-filename]"'
      - name: filetype
        type: std::string
        default_argument: '"[unset-filetype]"'
    body: |
      std::stringstream error_message;
      std::string current_path = std::filesystem::current_path().string();

      error_message << "The expected " << filetype << " file does not exist. "
                    << "Looking for \"" << filename << "\" from the current path "
                    << "\"" << current_path << "\".";
      throw_error(from, error_message.str());
      return;
    body_dependency_symbols:
      - std::filesystem


  - name: warn_from
    static: true
    parameters:
      - name: from
        type: std::string
        default_argument: '"[unset-from]"'
      - name: message
        type: std::string
        default_argument: '"[unset-message]"'
    body: |
      std::cout << build_warning_message(from, message) << std::endl;
    body_dependency_symbols:
      - std::stringstream
      - std::cout


  - name: throw_error
    static: true
    parameters:
      - name: from
        type: std::string
        default_argument: '"[unset-from]"'
      - name: message
        type: std::string
        default_argument: '"[unset-message]"'
    body: |
      std::stringstream error_message;
      error_message << "[" << from << "]: error: " << message;

      const std::string CONSOLE_COLOR_RED = "\033[1;31m";
      const std::string CONSOLE_COLOR_DEFAULT = "\033[0m";
      std::stringstream error_message_for_cout;
      error_message_for_cout << CONSOLE_COLOR_RED
                             << "[" << from << "] error: " << message
                             << CONSOLE_COLOR_DEFAULT << std::endl;

      std::cout << error_message_for_cout.str();

      throw std::runtime_error(error_message.str());
    body_dependency_symbols:
      - std::stringstream
      - std::cout


dependencies:


  - symbol: std::filesystem
    headers: [ filesystem ]


