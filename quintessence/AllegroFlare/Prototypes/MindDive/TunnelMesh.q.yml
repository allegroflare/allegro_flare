properties:


  - name: bitmap_bin
    type: AllegroFlare::BitmapBin*
    constructor_arg: true
    init_with: nullptr
    getter: true
    setter: true

  - name: atlas
    type: AllegroFlare::TileMaps::PrimMeshAtlas
    init_with: ''
    getter_ref: true

  - name: prim_mesh
    type: AllegroFlare::TileMaps::PrimMesh
    init_with: ''
    getter_ref: true

  - name: collision_tile_map
    type: AllegroFlare::TileMaps::TileMap<int>
    init_with: ''
    getter_ref: true

  - name: initialized
    type: bool
    init_with: false


functions:


  - name: initialize
    guards: 
      - (!initialized)
      - al_is_system_installed()
      - al_is_primitives_addon_initialized()
      - bitmap_bin
    body: |
      ALLEGRO_BITMAP *source_bitmap = bitmap_bin->auto_get("uv.png");
      atlas.duplicate_bitmap_and_load(source_bitmap, 100, 100, 0);
      // TODO: bitmap_bin->destroy["uv.png"]

      prim_mesh.initialize();
      prim_mesh.set_atlas(&atlas);
      //prim_mesh.rescale_tile_dimentions_to(32, 32);
      prim_mesh.rescale_tile_dimentions_to(2, 2);
      prim_mesh.resize(12, 32);

      random_fill();

      initialized = true;
      return;
    body_dependency_symbols:
      - al_is_image_addon_initialized
      - AllegroFlare::Random


  - name: random_fill
    body: |
      AllegroFlare::Random random;
      int num_tiles_in_atlas = 100;
      for (int y=0; y<prim_mesh.get_num_rows(); y++)
         for (int x=0; x<prim_mesh.get_num_columns(); x++)
         {
            prim_mesh.set_tile_id(x, y, random.get_random_int(0, num_tiles_in_atlas-1));
         }
      return;


  - name: infer_real_width
    type: float
    body: |
      return prim_mesh.get_real_width();


  - name: infer_real_height
    type: float
    body: |
      return prim_mesh.get_real_height();


  - name: obtain_tile_width
    type: float
    body: |
      return prim_mesh.get_tile_width();


  - name: obtain_tile_height
    type: float
    body: |
      return prim_mesh.get_tile_height();


  - name: render
    guards: [ initialized ]
    body: |
      prim_mesh.render();
      return;


dependencies:


  - symbol: AllegroFlare::Random
    headers: [ AllegroFlare/Random.hpp ]
  - symbol: AllegroFlare::BitmapBin
    headers: [ AllegroFlare/BitmapBin.hpp ]
  - symbol: al_is_image_addon_initialized
    headers: [ allegro5/allegro.h ]
  - symbol: AllegroFlare::TileMaps::TileMap
    headers: [ AllegroFlare/TileMaps/TileMap.hpp ]
  - symbol: AllegroFlare::TileMaps::PrimMeshAtlas
    headers: [ AllegroFlare/TileMaps/PrimMeshAtlas.hpp ]
  - symbol: AllegroFlare::TileMaps::PrimMesh
    headers: [ AllegroFlare/TileMaps/PrimMesh.hpp ]


