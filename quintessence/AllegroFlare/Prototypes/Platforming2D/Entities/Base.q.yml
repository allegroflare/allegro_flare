parent_classes:


  - class: AllegroFlare::ElementID
    scope: public
    init_with: parent


properties:


  - name: type
    type: std::string
    init_with: AllegroFlare::Prototypes::Platforming2D::Entities::Base::TYPE
    constructor_arg: true
    getter: true

  - name: parent
    type: AllegroFlare::ElementID*
    init_with: nullptr
    constructor_arg: true
    getter: true

  - name: TYPE
    type: char*
    init_with: '(char*)"Entities/Base"'
    static: true
    constexpr: true


documentation:


  - IMPORTANT - "parent" is being passed in here, but it shadows "parent" on ElementID.


functions:


  - name: update
    virtual: true
    body: |
      return;


  - name: draw
    virtual: true
    body: |
      return;


  - name: on_attribute_added
    virtual: true
    parameters:
      - name: attribute
        type: std::string
        default_argument: '"[unset-attribute]"'
    body: |
      return;


  - name: on_attribute_removed
    virtual: true
    parameters:
      - name: attribute
        type: std::string
        default_argument: '"[unset-attribute]"'
    body: |
      return;


  - name: is_type
    type: bool
    parameters:
      - name: possible_type
        type: std::string
        default_argument: '""'
    body: |
      return (possible_type == get_type());


dependencies:


  - symbol: AllegroFlare::ElementID
    headers: [ AllegroFlare/ElementID.hpp ]


