parent_classes:


  - class: AllegroFlare::Prototypes::Platforming2D::EntityControlConnectors::Base
    scope: public
    init_with: AllegroFlare::Prototypes::Platforming2D::EntityControlConnectors::Basic2D::TYPE


properties:


  - name: basic_2d_entity
    type: AllegroFlare::Prototypes::Platforming2D::Entities::Basic2D*
    init_with: nullptr
    constructor_arg: true
    getter: true
    setter: true

  - name: right_pressed
    type: int
    init_with: 0

  - name: left_pressed
    type: int
    init_with: 0

  - name: TYPE
    type: char*
    init_with: '(char*)"AllegroFlare/Prototypes/Platforming2D/EntityControlConnectors/Basic2D"'
    static: true
    constexpr: true


methods:


  - name: update_player_controls_on_player_controlled_entity
    virtual: true
    override: true
    guards: [ basic_2d_entity ]
    body: |
      using namespace AllegroFlare::Prototypes::Platforming2D::EntityFlagNames;

      // if this block is active, the player cannot control themselves while in the air, only when on the ground:
      //if (player_controlled_entity->exists(ADJACENT_TO_FLOOR))
      //{
         //player_controlled_entity->get_velocity_ref().position.x = 0.0;
      //}

      //if (player_controls.get_right_bumper_pressed())
      //{
         //player_controlled_entity->get_velocity_ref().position.x = 0.0;
      //}
      //else
      //{
      AllegroFlare::Vec2D player_control_velocity;

         // if this block is active, the player cannot control themselves while in the air, only when on the ground:
         if (basic_2d_entity->exists(ADJACENT_TO_FLOOR))
         {
            //player_control_velocity.x = 0.0;
            //player_controlled_entity->get_velocity_ref().position.x = 0.0;
            basic_2d_entity->get_velocity_ref().position.x = 0.0;
         }

            //if (player_controls.get_right_button_pressed())
            //{
            if (right_pressed > 0)
            {
               ////player_control_velocity.x = 1.0;
               //player_control_velocity.x = 1.0;
               //player_controlled_entity->set_bitmap_flip_h(false);
               ////player_controlled_entity->get_velocity_ref().position.x = 1.5; //2.0;
               //basic_2d_entity->get_velocity_ref().position.x = 0.0;
               player_control_velocity.x = 1.0;
            }
            //if (player_controls.get_left_button_pressed())
            //{
            if (left_pressed > 0)
            {
               player_control_velocity.x = -1.0;
               ////player_control_velocity.x = -1.0;
               //player_control_velocity.x = -1.0;
               //player_controlled_entity->set_bitmap_flip_h(true);
               ////player_controlled_entity->get_velocity_ref().position.x = -1.5; //-2.0;
            }
            //}
      //}


      float player_speed = 1.5;
      basic_2d_entity->get_velocity_ref().position.x = player_control_velocity.x * player_speed;


      return;
    body_dependency_symbols:
      - AllegroFlare::Prototypes::Platforming2D::EntityFlagNames



  - name: key_down_func
    virtual: true
    override: true
    parameters:
      - name: event
        type: ALLEGRO_EVENT*
        default_argument: nullptr
    guards: [ basic_2d_entity ]
    body: |
      switch (event->keyboard.keycode)
      {
         case ALLEGRO_KEY_LEFT:
            left_pressed++;
            //basic_2d_entity->get_velocity_ref().position.x = -1.5;
            basic_2d_entity->set_bitmap_flip_h(true);
         break;

         case ALLEGRO_KEY_RIGHT:
            right_pressed++;
            //basic_2d_entity->get_velocity_ref().position.x = 1.5;
            basic_2d_entity->set_bitmap_flip_h(false);
         break;

         case ALLEGRO_KEY_UP:
            //player_control_velocity.y = -1.0;
            //player_controls.set_up_button_pressed(true);
            //check_player_collisions_with_doors();
         break;

         case ALLEGRO_KEY_DOWN:
            //player_control_velocity.y = 1.0;
         break;

         case ALLEGRO_KEY_SPACE:
            //set_player_controlled_entity_jump();
         break;
      }

      return;


  - name: key_up_func
    virtual: true
    override: true
    parameters:
      - name: event
        type: ALLEGRO_EVENT*
        default_argument: nullptr
    guards: [ basic_2d_entity ]
    body: |
      switch (event->keyboard.keycode)
      {
         case ALLEGRO_KEY_LEFT:
            left_pressed--;
            basic_2d_entity->get_velocity_ref().position.x = 0.0;
         break;

         case ALLEGRO_KEY_RIGHT:
            right_pressed--;
            //basic_2d_entity->get_velocity_ref().position.x = 0.0;
         break;

         case ALLEGRO_KEY_UP:
            //player_control_velocity.y = -1.0;
            //player_controls.set_up_button_pressed(true);
            //check_player_collisions_with_doors();
         break;

         case ALLEGRO_KEY_DOWN:
            //player_control_velocity.y = 1.0;
         break;

         case ALLEGRO_KEY_SPACE:
            //set_player_controlled_entity_jump();
         break;
      }

      return;


dependencies:


  - symbol: AllegroFlare::Prototypes::Platforming2D::EntityControlConnectors::Base
    headers: [ AllegroFlare/Prototypes/Platforming2D/EntityControlConnectors/Base.hpp ]
  - symbol: AllegroFlare::Prototypes::Platforming2D::Entities::Basic2D
    headers: [ AllegroFlare/Prototypes/Platforming2D/Entities/Basic2D.hpp ]
  - symbol: ALLEGRO_EVENT
    headers: [ allegro5/allegro.h ]
  - symbol: AllegroFlare::Prototypes::Platforming2D::EntityFlagNames
    headers: [ AllegroFlare/Prototypes/Platforming2D/EntityFlagNames.hpp ]


