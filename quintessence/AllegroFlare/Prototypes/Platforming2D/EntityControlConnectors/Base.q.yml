properties:


  - name: type
    type: std::string
    init_with: AllegroFlare::Prototypes::Platforming2D::EntityControlConnectors::Base::TYPE
    constructor_arg: true
    getter: true

  - name: TYPE
    type: char*
    init_with: '(char*)"AllegroFlare/Prototypes/Platforming2D/EntityControlConnectors/Base"'
    static: true
    constexpr: true


methods:


  - name: update_player_controls_on_player_controlled_entity
    virtual: true
    body: |
      // TODO: Throw on not implemented
      // TODO: Add "time_now" and "delta_time" parameter
      return;


  - name: key_down_func
    virtual: true
    parameters:
      - name: event
        type: ALLEGRO_EVENT*
        default_argument: nullptr
    body: |
      // TODO: Throw on not implemented

      // Typically something like:

      //switch (event->keyboard.keycode)
      //{
         //case ALLEGRO_KEY_LEFT:
            // ...
         //break;

         //case ALLEGRO_KEY_RIGHT:
            // ...
         //break;

         //case ALLEGRO_KEY_UP:
            // ...
         //break;

         //case ALLEGRO_KEY_DOWN:
            // ...
         //break;

         //case ALLEGRO_KEY_SPACE:
            // ...
         //break;
      //}

      return;


  - name: key_up_func
    virtual: true
    parameters:
      - name: event
        type: ALLEGRO_EVENT*
        default_argument: nullptr
    body: |
      // TODO: Throw on not implemented
      // NOTE: See "key_down_func" for a typical example usage
      return;


  - name: is_type
    type: bool
    parameters:
      - name: possible_type
        type: std::string
        default_argument: '""'
    body: |
      return (possible_type == get_type());


dependencies:


  - symbol: ALLEGRO_EVENT
    headers: [ allegro5/allegro.h ]


