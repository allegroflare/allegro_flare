properties:


  - name: source_configuration
    type: AllegroFlare::Prototypes::FixedRoom2D::Configuration*
    init_with: nullptr
    constructor_arg: true
    getter: true
    setter: true

  - name: destination_inventory_index
    type: AllegroFlare::InventoryIndex*
    init_with: nullptr
    constructor_arg: true
    getter: true
    setter: true

  - name: destination_af_inventory
    type: AllegroFlare::Inventory*
    init_with: nullptr
    constructor_arg: true
    getter: true
    setter: true

  - name: destination_flags
    type: AllegroFlare::Inventory*
    init_with: nullptr
    constructor_arg: true
    getter: true
    setter: true

  - name: destination_entity_dictionary
    type: std::map<std::string, AllegroFlare::Prototypes::FixedRoom2D::Entities::Base*>*
    init_with: nullptr
    constructor_arg: true
    getter: true
    setter: true

  - name: destination_room_dictionary
    type: std::map<std::string, AllegroFlare::Prototypes::FixedRoom2D::Room*>*
    init_with: nullptr
    constructor_arg: true
    getter: true
    setter: true

  - name: destination_entity_room_associations
    type: std::map<std::string, std::string>*
    init_with: nullptr
    constructor_arg: true
    getter: true
    setter: true

  - name: destination_script_dictionary
    type: std::map<std::string, AllegroFlare::Prototypes::FixedRoom2D::Script>*
    init_with: nullptr
    constructor_arg: true
    getter: true
    setter: true

  - name: starting_in_room_identifier
    type: std::string
    init_with: '"[unset-starting_in_room_identifier]"'
    getter: true


functions:


  - name: load_from_source_configuration
    type: bool
    guards: [ source_configuration ]
    body: |
      *destination_inventory_index = source_configuration->get_inventory_index_ref();
      *destination_af_inventory = source_configuration->get_af_inventory();
      *destination_room_dictionary = source_configuration->get_room_dictionary();
      *destination_entity_dictionary = source_configuration->get_entity_dictionary();
      *destination_entity_room_associations = source_configuration->get_entity_room_associations();
      *destination_script_dictionary = source_configuration->get_script_dictionary();
      starting_in_room_identifier = source_configuration->get_starting_in_room_identifier();
      return true;


dependencies:


  - symbol: AllegroFlare::Inventory*
    headers: [ AllegroFlare/Inventory.hpp ]
  - symbol: AllegroFlare::InventoryIndex*
    headers: [ AllegroFlare/InventoryIndex.hpp ]
  - symbol: std::map<std::string, AllegroFlare::Prototypes::FixedRoom2D::Entities::Base*>*
    headers: [ AllegroFlare/Prototypes/FixedRoom2D/Entities/Base.hpp ]
  - symbol: std::map<std::string, AllegroFlare::Prototypes::FixedRoom2D::Room*>*
    headers: [ map, string, AllegroFlare/Prototypes/FixedRoom2D/Room.hpp ]
  - symbol: std::map<std::string, AllegroFlare::Prototypes::FixedRoom2D::Script>*
    headers: [ map, AllegroFlare/Prototypes/FixedRoom2D/Script.hpp ]
  - symbol: std::map<std::string, std::string>*
    headers: [ map, string ]
  - symbol: AllegroFlare::Prototypes::FixedRoom2D::EntityFactory
    headers: [ AllegroFlare/Prototypes/FixedRoom2D/EntityFactory.hpp ]
  - symbol: AllegroFlare::Prototypes::FixedRoom2D::RoomFactory
    headers: [ AllegroFlare/Prototypes/FixedRoom2D/RoomFactory.hpp ]
  - symbol: AllegroFlare::BitmapBin*
    headers: [ AllegroFlare/BitmapBin.hpp ]
  - symbol: AllegroFlare::EventEmitter*
    headers: [ AllegroFlare/EventEmitter.hpp ]
  - symbol: AllegroFlare::FontBin*
    headers: [ AllegroFlare/FontBin.hpp ]
  - symbol: AllegroFlare::Prototypes::FixedRoom2D::EntityCollectionHelper*
    headers: [ AllegroFlare/Prototypes/FixedRoom2D/EntityCollectionHelper.hpp ]
  - symbol: AllegroFlare::Prototypes::FixedRoom2D::Configuration*
    headers: [ AllegroFlare/Prototypes/FixedRoom2D/Configuration.hpp ]

  - symbol: AllegroFlare::Inventory
    headers: [ AllegroFlare/Inventory.hpp ]
  - symbol: AllegroFlare::InventoryIndex
    headers: [ AllegroFlare/InventoryIndex.hpp ]
  - symbol: AllegroFlare::Prototypes::FixedRoom2D::Configuration
    headers: [ AllegroFlare/Prototypes/FixedRoom2D/Configuration.hpp ]
  - symbol: AllegroFlare::Prototypes::FixedRoom2D::Entities::Base
    headers: [ AllegroFlare/Prototypes/FixedRoom2D/Entities/Base.hpp ]
  - symbol: AllegroFlare::Prototypes::FixedRoom2D::Room
    headers: [ AllegroFlare/Prototypes/FixedRoom2D/Room.hpp ]
  - symbol: AllegroFlare::Prototypes::FixedRoom2D::Script
    headers: [ AllegroFlare/Prototypes/FixedRoom2D/Script.hpp ]


