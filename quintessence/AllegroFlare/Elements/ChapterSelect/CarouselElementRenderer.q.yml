properties:


  - name: bitmap_bin
    type: AllegroFlare::BitmapBin*
    init_with: nullptr
    getter: true
    setter: true

  - name: font_bin
    type: AllegroFlare::FontBin*
    init_with: nullptr
    getter: true
    setter: true


methods:


  - name: render_ThumbnailWithLabel
    parameters:
      - name: element
        type: AllegroFlare::Elements::ChapterSelect::CarouselElements::ThumbnailWithLabel*
        default_argument: nullptr
    guards: [ element ]
    body: |
      AllegroFlare::Elements::ChapterSelect::CarouselElementRenderers::ThumbnailWithLabelRenderer renderer;
      renderer.set_bitmap_bin(bitmap_bin);
      renderer.set_font_bin(font_bin);
      renderer.set_thumbnail_image_identifier(element->get_bitmap_filename());
      renderer.set_label_text(element->get_label_text());

      renderer.render();
      return;
    body_dependency_symbols:
      - AllegroFlare::Elements::ChapterSelect::CarouselElementRenderers::ThumbnailWithLabelRenderer


  - name: render
    parameters:
      - name: element
        type: AllegroFlare::Elements::ChapterSelect::CarouselElements::Base*
        default_argument: nullptr
    guards: [ element ]
    body: |
      static std::map<std::string, std::function<void()>> items_map = {
         { AllegroFlare::Elements::ChapterSelect::CarouselElements::ThumbnailWithLabel::TYPE, [this, element](){
            AllegroFlare::Elements::ChapterSelect::CarouselElements::ThumbnailWithLabel *as =
               static_cast<AllegroFlare::Elements::ChapterSelect::CarouselElements::ThumbnailWithLabel*>(element);
            render_ThumbnailWithLabel(as);
         }},
         //{ "development_level", [this](){
            //create_development_level();
         //}},
      };

      // locate and call the function to handle the item
      if (items_map.count(element->get_type()) == 0)
      {
         bool item_handled = false;
         //if (unrecognized_key_callback_func)
         //{
            //item_handled = unrecognized_key_callback_func();
         //}

         if (!item_handled)
         {
            // item not found
            AllegroFlare::Logger::throw_unhandled_case(
                  "AllegroFlare::Elements::ChapterSelect::CarouselElementRenderer",
                  element->get_type()
            );
         }
      }
      else
      {
         // call the item
         items_map[element->get_type()]();
      }

      return;
    body_dependency_symbols:
      - std::map
      - AllegroFlare::Elements::ChapterSelect::CarouselElements::ThumbnailWithLabel
      - AllegroFlare::Logger


dependencies:


  - symbol: AllegroFlare::Elements::ChapterSelect::CarouselElements::Base
    headers: [ AllegroFlare/Elements/ChapterSelect/CarouselElements/Base.hpp ]
  - symbol: AllegroFlare::Elements::ChapterSelect::CarouselElements::ThumbnailWithLabel
    headers: [ AllegroFlare/Elements/ChapterSelect/CarouselElements/ThumbnailWithLabel.hpp ]
  - symbol: AllegroFlare::Elements::ChapterSelect::CarouselElementRenderers::ThumbnailWithLabelRenderer
    headers: [ AllegroFlare/Elements/ChapterSelect/CarouselElementRenderers/ThumbnailWithLabelRenderer.hpp ]
  - symbol: AllegroFlare::Logger
    headers: [ AllegroFlare/Logger.hpp ]
  - symbol: AllegroFlare::BitmapBin
    headers: [ AllegroFlare/BitmapBin.hpp ]
  - symbol: AllegroFlare::FontBin
    headers: [ AllegroFlare/FontBin.hpp ]


