properties:


  - name: font_bin
    type: AllegroFlare::FontBin*
    init_with: nullptr
    constructor_arg: true

  - name: name
    type: std::string
    init_with: '"[name-not-set]"'
    constructor_arg: true

  - name: width
    type: float
    init_with: 240
    constructor_arg: true
    getter: true

  - name: height
    type: float
    init_with: 70
    constructor_arg: true
    getter: true

  - name: background_color
    type: ALLEGRO_COLOR
    init_with: 'ALLEGRO_COLOR{1.0, 1.0, 1.0, 1.0}'
    constructor_arg: true
    getter: true
    setter: true

  - name: background_opacity
    type: float
    init_with: 1.0f
    constructor_arg: true
    getter: true
    setter: true

  - name: text_color
    type: ALLEGRO_COLOR
    init_with: 'ALLEGRO_COLOR{0.0, 0.0, 0.0, 1.0}'
    constructor_arg: true
    getter: true
    setter: true

  - name: opacity
    type: float
    init_with: 1.0f
    constructor_arg: true
    getter: true
    setter: true


methods:


  - name: render
    guards:
      - font_bin
      - al_is_system_installed()
      - al_is_primitives_addon_initialized()
      - al_get_current_display()
    body: |
      //ALLEGRO_COLOR fill_color = al_color_html("ffffff");
      ALLEGRO_COLOR final_background_color = ALLEGRO_COLOR{
         background_color.r * opacity * background_opacity, 
         background_color.g * opacity * background_opacity, 
         background_color.b * opacity * background_opacity, 
         background_color.a * opacity * background_opacity
      };
      al_draw_filled_rectangle(0, 0, width, height, final_background_color);
      //AllegroFlare::Elements::DialogBoxFrame(width, height).render();
      draw_text();
      return;
    body_dependency_symbols:
      - al_is_system_installed
      - al_is_primitives_addon_initialized
      - al_draw_filled_rounded_rectangle
      - al_color_html
      - AllegroFlare::Elements::DialogBoxFrame


  - name: draw_text
    private: true
    body: |
      ALLEGRO_FONT* font = obtain_dialog_font();
      ALLEGRO_COLOR final_text_color = ALLEGRO_COLOR{
         text_color.r * opacity, 
         text_color.g * opacity, 
         text_color.b * opacity, 
         text_color.a * opacity
      };
      //ALLEGRO_COLOR text_color = al_color_html("000000");
      al_draw_text(
         font,
         text_color,
         width/2,
         height/2 - al_get_font_line_height(font)/2,
         ALLEGRO_ALIGN_CENTER,
         name.c_str()
      );
      return;
    body_dependency_symbols:
      - al_color_html


  - name: obtain_dialog_font
    private: true
    type: ALLEGRO_FONT*
    guards: [ al_is_font_addon_initialized(), al_is_ttf_addon_initialized(), font_bin ]
    body: |
      static const std::string FONT_IDENTIFIER = "Inter-Medium.ttf -36";
      ALLEGRO_FONT* result_font = font_bin->operator[](FONT_IDENTIFIER);
      return result_font;


dependencies:


  - symbol: al_draw_text
    headers: [ allegro5/allegro.h ]
  - symbol: al_is_system_installed
    headers: [ allegro5/allegro.h ]
  - symbol: al_get_current_display
    headers: [ allegro5/allegro.h ]
  - symbol: al_color_html
    headers: [ allegro5/allegro_color.h ]
  - symbol: al_is_primitives_addon_initialized
    headers: [ allegro5/allegro_primitives.h ]
  - symbol: al_draw_filled_rounded_rectangle
    headers: [ allegro5/allegro_primitives.h ]
  - symbol: AllegroFlare::FontBin*
    headers: [ AllegroFlare/FontBin.hpp ]
  - symbol: ALLEGRO_FONT*
    headers: [ allegro5/allegro_font.h ]
  - symbol: al_color_html
    headers: [ allegro5/allegro_color.h ]
  - symbol: AllegroFlare::Elements::DialogBoxFrame
    headers: [ AllegroFlare/Elements/DialogBoxFrame.hpp ]

  - symbol: ALLEGRO_FONT
    headers: [ allegro5/allegro_font.h ]
  - symbol: AllegroFlare::FontBin
    headers: [ AllegroFlare/FontBin.hpp ]
  - symbol: ALLEGRO_COLOR
    headers: [ allegro5/allegro.h ]


