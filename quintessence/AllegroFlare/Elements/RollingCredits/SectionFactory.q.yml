functions:


  - name: create_column_with_labels
    type: AllegroFlare::Elements::RollingCredits::Sections::ColumnWithLabels*
    parameters:
      - name: elements
        type: std::vector<std::tuple<std::string, std::string>>
        default_argument: '{}'
    body: |
      AllegroFlare::Elements::RollingCredits::Sections::ColumnWithLabels* section =
        new AllegroFlare::Elements::RollingCredits::Sections::ColumnWithLabels(elements);
      return section;


  - name: create_header
    type: AllegroFlare::Elements::RollingCredits::Sections::Header*
    parameters:
      - name: text
        type: std::string
        default_argument: '{}'
    body: |
      AllegroFlare::Elements::RollingCredits::Sections::Header* section =
        new AllegroFlare::Elements::RollingCredits::Sections::Header(text);
      return section;
    

  - name: create_text
    type: AllegroFlare::Elements::RollingCredits::Sections::Text*
    parameters:
      - name: text
        type: std::string
        default_argument: '{}'
      - name: alignment
        type: std::string
        default_argument: AllegroFlare::Elements::RollingCredits::Sections::Text::ALIGN_LEFT
    body: |
      AllegroFlare::Elements::RollingCredits::Sections::Text* section =
        new AllegroFlare::Elements::RollingCredits::Sections::Text(text, alignment);
      return section;
    

  - name: create_standard_disclaimers_text
    type: std::vector<AllegroFlare::Elements::RollingCredits::Sections::Text*>
    parameters:
      - name: text
        type: std::string
        default_argument: '{}'
    body: |
      auto &ALIGN_CENTER = AllegroFlare::Elements::RollingCredits::Sections::Text::ALIGN_CENTER;

      std::string disclaimer_1 = AllegroFlare::LegalClauseGenerator::generate_persons_resemblance_disclaimer();
      std::string disclaimer_2 = AllegroFlare::LegalClauseGenerator::generate_views_and_opinions_disclaimer();
      std::string disclaimer_3 = AllegroFlare::LegalClauseGenerator::generate_company_non_endorcement_disclaimer();
      std::string disclaimer_4 = AllegroFlare::LegalClauseGenerator::generate_no_mistreatment_of_animals_disclaimer();
      std::string disclaimer_5 = AllegroFlare::LegalClauseGenerator::generate_as_is_without_warranty_disclaimer();

      return std::vector<AllegroFlare::Elements::RollingCredits::Sections::Text*>{
         new AllegroFlare::Elements::RollingCredits::Sections::Text(disclaimer_1, ALIGN_CENTER),
         new AllegroFlare::Elements::RollingCredits::Sections::Text(disclaimer_2, ALIGN_CENTER),
         new AllegroFlare::Elements::RollingCredits::Sections::Text(disclaimer_3, ALIGN_CENTER),
         new AllegroFlare::Elements::RollingCredits::Sections::Text(disclaimer_4, ALIGN_CENTER),
         new AllegroFlare::Elements::RollingCredits::Sections::Text(disclaimer_5, ALIGN_CENTER),
      };
    body_dependency_symbols:
      - AllegroFlare::LegalClauseGenerator


dependencies:


  - symbol: AllegroFlare::Elements::RollingCredits::Sections::Header
    headers: [ AllegroFlare/Elements/RollingCredits/Sections/Header.hpp ]
  - symbol: AllegroFlare::Elements::RollingCredits::Sections::ColumnWithLabels
    headers: [ AllegroFlare/Elements/RollingCredits/Sections/ColumnWithLabels.hpp ]
  - symbol: AllegroFlare::Elements::RollingCredits::Sections::Text
    headers: [ AllegroFlare/Elements/RollingCredits/Sections/Text.hpp ]
  - symbol: AllegroFlare::LegalClauseGenerator
    headers: [ AllegroFlare/LegalClauseGenerator.hpp ]


