properties:


  - name: spacer_width
    type: int
    init_with: DEFAULT_SPACER_WIDTH
    getter: true
    setter: explicit
    
  - name: section_spacer_width
    type: int
    init_with: DEFAULT_SECTION_SPACER_WIDTH
    getter: true
    setter: explicit

  - name: DEFAULT_SPACER_WIDTH
    type: int
    init_with: 1080/6
    static: true
    constexpr: true

  - name: DEFAULT_SECTION_SPACER_WIDTH
    type: int
    init_with: 1080/2
    static: true
    constexpr: true


methods:


  - name: set_spacer_width
    parameters:
      - name: spacer_width
        type: int
        default_argument: DEFAULT_SPACER_WIDTH
    guards: [ (spacer_width >= 0) ]
    body: |
      this->spacer_width = spacer_width;
      return;


  - name: set_section_spacer_width
    parameters:
      - name: section_spacer_width
        type: int
        default_argument: DEFAULT_SECTION_SPACER_WIDTH
    guards: [ (section_spacer_width >= 0) ]
    body: |
      this->section_spacer_width = section_spacer_width;
      return;


  - name: create_column_with_labels
    type: AllegroFlare::Elements::RollingCredits::Sections::ColumnWithLabels*
    parameters:
      - name: elements
        type: std::vector<std::tuple<std::string, std::string>>
        default_argument: '{}'
    body: |
      AllegroFlare::Elements::RollingCredits::Sections::ColumnWithLabels* section =
        new AllegroFlare::Elements::RollingCredits::Sections::ColumnWithLabels(elements);
      return section;


  - name: create_header
    type: AllegroFlare::Elements::RollingCredits::Sections::Header*
    parameters:
      - name: text
        type: std::string
        default_argument: '{}'
    body: |
      AllegroFlare::Elements::RollingCredits::Sections::Header* section =
        new AllegroFlare::Elements::RollingCredits::Sections::Header(text);
      return section;
    

  - name: create_text
    type: AllegroFlare::Elements::RollingCredits::Sections::Text*
    parameters:
      - name: text
        type: std::string
        default_argument: '{}'
      - name: alignment
        type: std::string
        default_argument: AllegroFlare::Elements::RollingCredits::Sections::Text::ALIGN_LEFT
    body: |
      AllegroFlare::Elements::RollingCredits::Sections::Text* section =
        new AllegroFlare::Elements::RollingCredits::Sections::Text(text, alignment);
      return section;
    

  - name: create_spacer
    type: AllegroFlare::Elements::RollingCredits::Sections::Spacer*
    body: |
      AllegroFlare::Elements::RollingCredits::Sections::Spacer* section =
        new AllegroFlare::Elements::RollingCredits::Sections::Spacer(spacer_width);
      return section;
    body_dependency_symbols:
      - AllegroFlare::Elements::RollingCredits::Sections::Spacer


  - name: create_section_spacer
    type: AllegroFlare::Elements::RollingCredits::Sections::Spacer*
    body: |
      AllegroFlare::Elements::RollingCredits::Sections::Spacer* section =
        new AllegroFlare::Elements::RollingCredits::Sections::Spacer(section_spacer_width);
      return section;
    body_dependency_symbols:
      - AllegroFlare::Elements::RollingCredits::Sections::Spacer


  - name: create_standard_disclaimers_text
    type: std::vector<AllegroFlare::Elements::RollingCredits::Sections::Base*>
    parameters:
      - name: company_name
        type: std::string
        default_argument: '"this company"'
      - name: non_endorced_software_and_software_company_names 
        type: std::vector<std::string>
        default_argument: '{}'
    body: |
      auto &ALIGN_CENTER = AllegroFlare::Elements::RollingCredits::Sections::LegalText::ALIGN_CENTER;

      std::string disclaimer_1 = AllegroFlare::LegalClauseGenerator::generate_persons_resemblance_disclaimer();
      std::string disclaimer_2 = AllegroFlare::LegalClauseGenerator::generate_views_and_opinions_disclaimer();
      std::string disclaimer_3 = AllegroFlare::LegalClauseGenerator::generate_company_non_endorcement_disclaimer(
            company_name,
            non_endorced_software_and_software_company_names
         );
      std::string disclaimer_4 = AllegroFlare::LegalClauseGenerator::generate_no_mistreatment_of_animals_disclaimer();
      std::string disclaimer_5 = AllegroFlare::LegalClauseGenerator::generate_as_is_without_warranty_disclaimer();

      return std::vector<AllegroFlare::Elements::RollingCredits::Sections::Base*>{
         new AllegroFlare::Elements::RollingCredits::Sections::LegalText(disclaimer_1, ALIGN_CENTER),
         new AllegroFlare::Elements::RollingCredits::Sections::LegalText(disclaimer_2, ALIGN_CENTER),
         new AllegroFlare::Elements::RollingCredits::Sections::LegalText(disclaimer_3, ALIGN_CENTER),
         new AllegroFlare::Elements::RollingCredits::Sections::LegalText(disclaimer_4, ALIGN_CENTER),
         new AllegroFlare::Elements::RollingCredits::Sections::LegalText(disclaimer_5, ALIGN_CENTER),
      };
    body_dependency_symbols:
      - AllegroFlare::LegalClauseGenerator
      - AllegroFlare::Elements::RollingCredits::Sections::LegalText


dependencies:


  - symbol: AllegroFlare::Elements::RollingCredits::Sections::Header
    headers: [ AllegroFlare/Elements/RollingCredits/Sections/Header.hpp ]
  - symbol: AllegroFlare::Elements::RollingCredits::Sections::ColumnWithLabels
    headers: [ AllegroFlare/Elements/RollingCredits/Sections/ColumnWithLabels.hpp ]
  - symbol: AllegroFlare::Elements::RollingCredits::Sections::Text
    headers: [ AllegroFlare/Elements/RollingCredits/Sections/Text.hpp ]
  - symbol: AllegroFlare::Elements::RollingCredits::Sections::LegalText
    headers: [ AllegroFlare/Elements/RollingCredits/Sections/LegalText.hpp ]
  - symbol: AllegroFlare::Elements::RollingCredits::Sections::Spacer
    headers: [ AllegroFlare/Elements/RollingCredits/Sections/Spacer.hpp ]
  - symbol: AllegroFlare::LegalClauseGenerator
    headers: [ AllegroFlare/LegalClauseGenerator.hpp ]
  - symbol: AllegroFlare::Elements::RollingCredits::Sections::Base
    headers: [ AllegroFlare/Elements/RollingCredits/Sections/Base.hpp ]


