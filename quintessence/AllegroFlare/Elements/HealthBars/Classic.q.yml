parent_classes:


  - class: AllegroFlare::Elements::Base
    scope: public
    init_with: ''


properties:


  - name: max
    type: int
    init_with: 10
    constructor_arg: true
    getter: true
    setter: true
  
  - name: value
    type: int
    init_with: 10
    constructor_arg: true
    getter: true
    setter: true

  - name: fill_color
    type: ALLEGRO_COLOR
    init_with: '(ALLEGRO_COLOR{0.86, 0.08, 0.24, 1} /*crimson*/)'
    constructor_arg: true
    getter: true
    setter: true

  - name: bar_width
    type: float
    init_with: 16
    constructor_arg: true
    getter: true
    setter: true

  - name: bar_spacing
    type: float
    init_with: 24
    constructor_arg: true
    getter: true
    setter: true

  - name: bar_height
    type: float
    init_with: 36
    constructor_arg: true
    getter: true
    setter: true

  - name: bar_stroke_thickness
    type: float
    init_with: 3.0f
    constructor_arg: true
    getter: true
    setter: true


functions:


  - name: render
    type: void
    guards: [ al_is_system_installed(), al_is_primitives_addon_initialized() ]
    body: |
      float h_thickness = bar_stroke_thickness * 0.5;
      ALLEGRO_COLOR outline_color = ALLEGRO_COLOR{1, 1, 1, 1};

      get_placement_ref().start_transform();

      // TODO: This could be optimized to a single set of vertexes and a single draw call
      for (int i=0; i<max; i++)
      {
         if (i <= value)
         {
            al_draw_filled_rectangle(i*bar_spacing, 0, i*bar_spacing+bar_width, bar_height, fill_color);
         }
         else
         {
            al_draw_rectangle(
                  i*bar_spacing + h_thickness,
                  0 + h_thickness,
                  i*bar_spacing+bar_width - h_thickness,
                  bar_height - h_thickness,
                  outline_color,
                  bar_stroke_thickness
               );
         }
      }
      get_placement_ref().restore_transform();
      return;
    body_dependency_symbols:
      - al_is_primitives_addon_initialized


dependencies:


  - symbol: al_is_primitives_addon_initialized
    headers: [ allegro5/allegro_primitives.h ]
  - symbol: AllegroFlare::Elements::Base
    headers: [ AllegroFlare/Elements/Base.hpp ]
  - symbol: ALLEGRO_COLOR
    headers: [ allegro5/allegro.h ]


