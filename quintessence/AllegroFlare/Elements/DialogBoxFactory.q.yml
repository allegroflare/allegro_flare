functions:


  - name: build_basic_test_dialog
    type: AllegroFlare::Elements::DialogBoxes::Basic
    body: |
      AllegroFlare::Elements::DialogBoxes::Basic basic_dialog_box;
      basic_dialog_box.set_pages({
         { "Interesting.  I'm just sitting here working." },
         { "Oh well. I guess I'll just have to keep grinding." },
         { "At least I'm listening to some cool music." },
      });

      return basic_dialog_box;
    body_dependency_symbols:
      - AllegroFlare::Elements::DialogBoxes::Basic


  - name: create_basic_test_dialog
    type: AllegroFlare::Elements::DialogBoxes::Basic*
    body: |
      AllegroFlare::Elements::DialogBoxes::Basic *basic_dialog_box = new AllegroFlare::Elements::DialogBoxes::Basic;
      basic_dialog_box->set_pages({
         { "Interesting.  I'm just sitting here working." },
         { "Oh well. I guess I'll just have to keep grinding." },
         { "At least I'm listening to some cool music." },
      });

      return basic_dialog_box;
    body_dependency_symbols:
      - AllegroFlare::Elements::DialogBoxes::Basic


  - name: build_basic_dialog
    type: AllegroFlare::Elements::DialogBoxes::Basic
    parameters:
      - name: pages
        type: std::vector<std::string>
        default_argument: '{}'
    body: |
      AllegroFlare::Elements::DialogBoxes::Basic basic_dialog_box;
      basic_dialog_box.set_pages(pages);
      return basic_dialog_box;


  - name: create_basic_dialog
    type: AllegroFlare::Elements::DialogBoxes::Basic*
    parameters:
      - name: pages
        type: std::vector<std::string>
        default_argument: '{}'
    body: |
      AllegroFlare::Elements::DialogBoxes::Basic* basic_dialog_box = new AllegroFlare::Elements::DialogBoxes::Basic();
      basic_dialog_box->set_pages(pages);
      return basic_dialog_box;


  - name: create_choice_dialog
    type: AllegroFlare::Elements::DialogBoxes::Choice*
    parameters:
      - name: prompt
        type: std::string
        default_argument: '"[prompt-argument-set-as-default]"'
      - name: options
        type: std::vector<std::pair<std::string, std::string>>
        default_argument: '{}'
    body: |
      AllegroFlare::Elements::DialogBoxes::Choice* choice_dialog_box
         = new AllegroFlare::Elements::DialogBoxes::Choice(prompt, options);
      choice_dialog_box->initialize();
      //basic_dialog_box->set_pages(pages); // ??? hmm
      return choice_dialog_box;


  - name: create_you_got_an_item_dialog
    type: AllegroFlare::Elements::DialogBoxes::YouGotAnItem*
    parameters:
      - name: item_name
        type: std::string
        default_argument: '"[unset-item-name]"'
      - name: item_bitmap_identifier
        type: std::string
        default_argument: '"[unset-item-bitmap-identifier]"'
    body: |
      AllegroFlare::Elements::DialogBoxes::YouGotAnItem* you_got_an_item_dialog_box =
         new AllegroFlare::Elements::DialogBoxes::YouGotAnItem(item_name, item_bitmap_identifier);
      you_got_an_item_dialog_box->set_created_at(al_get_time());
      you_got_an_item_dialog_box->show();
      //choice_dialog_box->initialize(); // doesn't seem to require initialization
      return you_got_an_item_dialog_box;
    body_dependency_symbols:
      - al_get_time


dependencies:


  - symbol: al_get_time
    headers: [ allegro5/allegro.h ]
  - symbol: AllegroFlare::Elements::DialogBoxes::YouGotAnItem*
    headers: [ AllegroFlare/Elements/DialogBoxes/YouGotAnItem.hpp ]
  - symbol: AllegroFlare::Elements::DialogBoxes::Choice*
    headers: [ AllegroFlare/Elements/DialogBoxes/Choice.hpp ]
  - symbol: AllegroFlare::Elements::DialogBoxes::Basic*
    headers: [ AllegroFlare/Elements/DialogBoxes/Basic.hpp ]
  - symbol: AllegroFlare::Elements::DialogBoxes::Basic
    headers: [ AllegroFlare/Elements/DialogBoxes/Basic.hpp ]
  - symbol: std::vector<std::pair<std::string, std::string>>
    headers: [ vector, utility, string ]


