parent_classes:


  - class: AllegroFlare::Elements::Backgrounds::Base
    scope: public
    init_with: AllegroFlare::Elements::Backgrounds::Image::TYPE


properties:


  - name: bitmap_bin
    type: AllegroFlare::BitmapBin*
    init_with: nullptr
    constructor_arg: true
    getter: true
    setter: true

  - name: image_filename
    type: std::string
    init_with: '"[image-filename-not-set]"'
    constructor_arg: true
    getter: true
    setter: true

  - name: TYPE
    type: char*
    init_with: '(char*)"AllegroFlare/Elements/Backgrounds/Image"'
    static: true
    constexpr: true


documentation:


  - todos:
     - Allow setting a custom placement for the image. Right now it's centered in the middle with a scale of 1.0


methods:


  - name: render
    override: true
    guards: [ bitmap_bin ]
    body: |
      int surface_width = 1920; // TDOO: Consider having this value be a property on the class
      int surface_height = 1080; // TDOO: Consider having this value be a property on the class
      ALLEGRO_BITMAP *bitmap = obtain_background_bitmap();
      AllegroFlare::Placement2D background_image_placement(
         surface_width * 0.5f,
         surface_height * 0.5f,
         al_get_bitmap_width(bitmap),
         al_get_bitmap_height(bitmap)
      );

      background_image_placement.start_transform();
      al_draw_bitmap(bitmap, 0, 0, 0);
      background_image_placement.restore_transform();
      return;
    body_dependency_symbols:
      - AllegroFlare::Placement2D


  - name: obtain_background_bitmap
    type: ALLEGRO_BITMAP*
    private: true
    body: |
      std::string full_identifier = image_filename;
      return bitmap_bin->auto_get(full_identifier);


dependencies:


  - symbol: ALLEGRO_BITMAP
    headers: [ allegro5/allegro.h ]
  - symbol: AllegroFlare::BitmapBin
    headers: [ AllegroFlare/BitmapBin.hpp ]
  - symbol: AllegroFlare::Elements::Backgrounds::Base
    headers: [ AllegroFlare/Elements/Backgrounds/Base.hpp ]
  - symbol: AllegroFlare::Placement2D
    headers: [ AllegroFlare/Placement2D.hpp ]


