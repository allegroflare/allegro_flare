parent_classes:


  - class: AllegroFlare::CameraControlStrategies2D::Base
    scope: public
    init_with: AllegroFlare::CameraControlStrategies2D::HorizontalRail::TYPE


properties:


  - name: entity_to_follow
    type: AllegroFlare::Prototypes::Platforming2D::Entities::Basic2D*
    init_with: nullptr
    getter: true
    setter: true

  - name: tracking_target_position_x
    type: float
    init_with: 0.0

  - name: tracking_target_position_y
    type: float
    init_with: 0.0

  - name: TYPE
    type: char*
    init_with: '(char*)"CameraControlStrategies2D/HorizontalRail"'
    static: true
    constexpr: true


functions:


  - name: initialize
    virtual: true
    override: true
    guards: [ (!get_initialized()), get_camera() ]
    body: |
      float assumed_tile_width = 16.0f;
      float assumed_tile_height = 16.0f;
      float room_width = assumed_tile_width * 25; // tile_mesh->get_real_width();
      float room_height = assumed_tile_height * 15; //tile_mesh->get_real_height();

      get_camera_ref()->scale = AllegroFlare::vec2d(1.0 / 4.8, 1.0 / 4.5);
      get_camera_ref()->position = AllegroFlare::Vec2D{room_width/2, room_height/2};

      Base::initialize();
      return;


  - name: update
    virtual: true
    override: true
    guards: [ get_camera() ]
    body: |
      //camera->position = {width/2, height/2};
      if (entity_to_follow)
      {
         tracking_target_position_x = entity_to_follow->get_place_ref().position.x;
         tracking_target_position_y = entity_to_follow->get_place_ref().position.y;
      }

      float assumed_tile_width = 16.0f;
      float assumed_tile_height = 16.0f;
      float room_width = assumed_tile_width * 25; // tile_mesh->get_real_width();
      float room_height = assumed_tile_height * 15; //tile_mesh->get_real_height();

      // note that Shovel Knight has 4.5x4.5 sized pixels (actually 4.8 x 4.5)
         // this means:
         //     - a virtual resolution of 400x240
         //     = a native display resolution of 1920x1080 (HD)
         //     - 25 tiles x 15 tiles to fill the virtual resolution
         //     - 16x16 pixel tiles
         // see https://www.yachtclubgames.com/blog/breaking-the-nes

      //camera.scale = AllegroFlare::vec2d(1.0 / 4.8, 1.0 / 4.5);
      int room_x = (tracking_target_position_x / room_width);
      int room_y = (tracking_target_position_y / room_height);
      get_camera_ref()->position = AllegroFlare::Vec2D{room_width/2, room_height/2};
      get_camera_ref()->position += AllegroFlare::vec2d(room_x * room_width, room_y * room_height);

      get_camera_ref()->position.x = tracking_target_position_x;

      return;


dependencies:


  - symbol: AllegroFlare::CameraControlStrategies2D::Base
    headers: [ AllegroFlare/CameraControlStrategies2D/Base.hpp ]
  - symbol: AllegroFlare::Prototypes::Platforming2D::Entities::Basic2D
    headers: [ AllegroFlare/Prototypes/Platforming2D/Entities/Basic2D.hpp ]


