parent_classes:


  - class: AllegroFlare::TileMaps::AutoTile::Filters::Base
    scope: public
    init_with: AllegroFlare::TileMaps::AutoTile::Filters::BasicFloor::TYPE


properties:


  - name: floor_tile_value
    type: int
    init_with: 0
    constructor_arg: true
    getter: true
    setter: true

  - name: TYPE
    type: char*
    init_with: '(char*)"Filters/BasicFloor"'
    static: true
    constexpr: true


functions:


  - name: process
    virtual: true
    override: true
    type: bool
    body: |
      AllegroFlare::TileMaps::AutoTile::FilterMatrix &input_matrix = get_input_matrix_ref();
      AllegroFlare::TileMaps::AutoTile::FilterMatrix &result_matrix = get_result_matrix_ref();
      

      // Resize the result matrix
      result_matrix.resize(input_matrix.get_width(), input_matrix.get_height());

      std::vector<std::vector<int>> if_match = {
        { 0 },
        { 1 }
      };

      std::vector<std::vector<int>> apply_this = {
        { 0                },
        { floor_tile_value }
      };

      // HERE:
      // TODO: Test if the if_match matrix fits, and if so, apply the apply_this matrix
      //for (int y=0; y<height; y++)
         //for (int x=0; x<width; x++)
            //result_matrix.set_tile(x, y, tile_value);

      return true;


dependencies:


  - symbol: AllegroFlare::TileMaps::AutoTile::Filters::Base
    headers: [ AllegroFlare/TileMaps/AutoTile/Filters/Base.hpp ]


