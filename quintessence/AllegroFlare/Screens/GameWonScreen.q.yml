parent_classes:


  - class: AllegroFlare::Screens::Base
    scope: public
    init_with: '"GameWonScreen"'


properties:


  - name: event_emitter
    type: AllegroFlare::EventEmitter*
    init_with: nullptr
    constructor_arg: true
    setter: true

  - name: font_bin
    type: AllegroFlare::FontBin*
    init_with: nullptr
    constructor_arg: true
    setter: true

  - name: title_text
    type: std::string
    init_with: DEFAULT_TITLE_TEXT
    constructor_arg: true
    setter: true

  - name: title_font_name
    type: std::string
    init_with: '"Inter-Medium.ttf"'
    constructor_arg: true
    getter: true
    setter: true

  - name: title_font_size
    type: int
    init_with: -80
    constructor_arg: true
    getter: true
    setter: true

  - name: instruction_text
    type: std::string
    init_with: DEFAULT_INSTRUCTION_TEXT
    constructor_arg: true
    setter: true

  - name: instruction_font_name
    type: std::string
    init_with: '"Inter-Medium.ttf"'
    constructor_arg: true
    getter: true
    setter: true

  - name: instruction_font_size
    type: int
    init_with: -48
    constructor_arg: true
    getter: true
    setter: true

  - name: game_event_name_to_emit_on_submission
    type: std::string
    init_with: '"game_won_finished"'
    constructor_arg: true
    getter: true
    setter: true

  - name: DEFAULT_TITLE_TEXT
    type: std::string
    init_with: '"Y   O   U      W   I   N"'
    static: true
    const: true
    setter: false

  - name: DEFAULT_INSTRUCTION_TEXT
    type: std::string
    init_with: '"Press any button"'
    static: true
    const: true
    setter: false


functions:


  - name: primary_timer_func
    virtual: true
    override: true
    body: |
      render();
      return;


  - name: render
    guards: [ al_is_system_installed(), al_is_font_addon_initialized() ]
    body: |
      draw_primary_text();
      draw_instruction_text();
      return;


  - name: draw_primary_text
    body: |
      // TODO: review guards on this function
      ALLEGRO_FONT *title_font = obtain_title_font();
      float font_line_height = al_get_font_line_height(title_font);
      int surface_width = 1920;
      int surface_height = 1080;
      al_draw_multiline_text(
         title_font,
         ALLEGRO_COLOR{1, 1, 1, 1},
         surface_width / 2,
         surface_height / 2 - font_line_height,
         surface_width,
         font_line_height,
         ALLEGRO_ALIGN_CENTER,
         title_text.c_str()
      );
      return;


  - name: draw_instruction_text
    body: |
      // TODO: review guards on this function
      ALLEGRO_FONT *title_font = obtain_instruction_font();
      float font_line_height = al_get_font_line_height(title_font);
      int surface_width = 1920;
      int surface_height = 1080;
      al_draw_multiline_text(
         title_font,
         ALLEGRO_COLOR{1, 1, 1, 1},
         surface_width / 2,
         surface_height / 2 + font_line_height*2,
         surface_width,
         font_line_height,
         ALLEGRO_ALIGN_CENTER,
         instruction_text.c_str()
      );
      return;


  - name: obtain_title_font
    private: true
    type: ALLEGRO_FONT*
    guards: [ font_bin ]
    body: |
      std::stringstream title_font_identifier;
      title_font_identifier << title_font_name << " " << title_font_size;
      return font_bin->auto_get(title_font_identifier.str());


  - name: obtain_instruction_font
    private: true
    type: ALLEGRO_FONT*
    guards: [ font_bin ]
    body: |
      std::stringstream instruction_font_identifier;
      instruction_font_identifier << instruction_font_name << " " << instruction_font_size;
      return font_bin->auto_get(instruction_font_identifier.str());


  - name: virtual_control_button_down_func
    virtual: true
    override: true
    parameters:
      - name: player
        type: AllegroFlare::Player*
        default_argument: nullptr
      - name: virtual_controller
        type: AllegroFlare::VirtualControllers::Base*
        default_argument: nullptr
      - name: virtual_controller_button_num
        type: int
        default_argument: 0
      - name: is_repeat
        type: bool
        default_argument: false
    body: |
      event_emitter->emit_game_event(game_event_name_to_emit_on_submission);


dependencies:


  - symbol: ALLEGRO_FLARE_EVENT_START_TITLE_SCREEN
    headers: [ AllegroFlare/EventNames.hpp ]
  - symbol: std::vector<std::pair<std::string, std::string>>
    headers: [ vector, utility, string ]
  - symbol: AllegroFlare::Screens::Base
    headers: [ AllegroFlare/Screens/Base.hpp ]
  - symbol: ALLEGRO_FONT
    headers: [ allegro5/allegro_font.h ]
  - symbol: AllegroFlare::FontBin
    headers: [ AllegroFlare/FontBin.hpp ]
  - symbol: AllegroFlare::EventEmitter
    headers: [ AllegroFlare/EventEmitter.hpp ]
  - symbol: AllegroFlare::Player
    headers: [ AllegroFlare/Player.hpp ]
  - symbol: AllegroFlare::VirtualControllers::Base
    headers: [ AllegroFlare/VirtualControllers/Base.hpp ]
  - symbol: AllegroFlare::VirtualControllers::GenericController
    headers: [ AllegroFlare/VirtualControllers/GenericController.hpp ]


