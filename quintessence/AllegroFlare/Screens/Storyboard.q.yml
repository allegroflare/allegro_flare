parent_classes:


  - class: AllegroFlare::Screens::Base
    scope: public
    init_with: ''


properties:


  - name: font_bin
    type: AllegroFlare::FontBin*
    init_with: nullptr
    constructor_arg: true

  - name: event_emitter
    type: AllegroFlare::EventEmitter*
    init_with: nullptr
    constructor_arg: true

  - name: pages
    type: std::vector<std::string>
    init_with: '{}'
    constructor_arg: true

  - name: screen_identifier_to_switch_to_after_completing
    type: std::string
    init_with: '""'
    constructor_arg: true

  - name: current_page
    type: intptr_t
    init_with: 0
    constructor_arg: true


functions:


  - name: render
    type: void
    guards: [ al_is_system_installed(), al_is_font_addon_initialized() ]
    body: |
      ALLEGRO_FONT *text_font = obtain_font();

      al_clear_to_color(AllegroFlare::Color::Black);

      if (current_page >= pages.size()) return;

      float x_padding = 150;
      float y_padding = 150;

      al_draw_multiline_text(
            text_font,
            AllegroFlare::Color(0xd0f2c5).to_al(),
            x_padding,
            y_padding,
            1920 - x_padding*2,
            al_get_font_line_height(text_font)*1.75,
            0,
            pages[current_page].c_str()
         );
      return;
    body_dependency_symbols:
      - al_draw_multiline_text
      - AllegroFlare::Color


  - name: reset
    type: void
    body: |
      current_page = 0;
      return;


  - name: on_activate
    virtual: true
    override: true
    type: void
    body: |
      reset();
      return;


  - name: primary_timer_func
    virtual: true
    override: true
    type: void
    body: |
      render();
      return;


  - name: key_down_func
    virtual: true
    override: true
    type: void
    parameters:
      - name: event
        type: ALLEGRO_EVENT*
        default_argument: nullptr
    guards: [ event_emitter ]
    body: |
      current_page++;

      if (current_page >= pages.size())
         event_emitter->emit_switch_screen_event(screen_identifier_to_switch_to_after_completing);

      return;


  - name: obtain_font
    private: true
    type: ALLEGRO_FONT*
    guards: [ font_bin ]
    body: |
      return font_bin->auto_get("DroidSans.ttf -72");


dependencies:


  - symbol: AllegroFlare::Color
    headers: [ AllegroFlare/Color.hpp ]
  - symbol: AllegroFlare::Screens::Base
    headers: [ AllegroFlare/Screens/Base.hpp ]
  - symbol: AllegroFlare::EventEmitter*
    headers: [ AllegroFlare/EventEmitter.hpp ]
  - symbol: AllegroFlare::FontBin*
    headers: [ AllegroFlare/FontBin.hpp ]
  - symbol: ALLEGRO_FONT*
    headers: [ allegro5/allegro_font.h ]
  - symbol: ALLEGRO_EVENT*
    headers: [ allegro5/allegro.h ]
  - symbol: al_draw_multiline_text
    headers: [ allegro5/allegro_font.h ]


