parent_classes:


  - class: AllegroFlare::Screens::Base
    scope: public
    init_with: '"Achievements"'


properties:


  - name: font_bin
    type: AllegroFlare::FontBin*
    init_with: nullptr
    constructor_arg: true

  - name: cursor_dest_position
    type: float
    init_with: 0.0f
    constructor_arg: true

  - name: achievements_list
    type: AllegroFlare::Elements::AchievementsList
    init_with: '{}'
    getter_ref: true

  - name: initialized
    type: bool
    init_with: false
    

functions:


  - name: initialize
    guards: [ (!initialized), al_is_system_installed(), al_is_font_addon_initialized(), font_bin ]
    body: |
      achievements_list.set_font_bin(font_bin);
      achievements_list.set_achievements(build_achievements());
      initialized = true;
      return;


  - name: primary_timer_func
    virtual: true
    override: true
    guards: [ initialized ]
    body: |
      update();
      render();
      return;


  - name: update
    private: true
    guards: [ initialized ]
    body: |
      return;


  - name: render
    type: void
    private: true
    guards: [ initialized ]
    body: |
      achievements_list.render();
      return;
    body_dependency_symbols:
      - AllegroFlare::Elements::AchievementsList


  - name: build_achievements
    type: std::vector<std::tuple<std::string, std::string, std::string>>
    body: |
      return AllegroFlare::Elements::AchievementsList::build_placeholder_achievements();


dependencies:


  - symbol: AllegroFlare::FontBin*
    headers: [ AllegroFlare/FontBin.hpp ]
  - symbol: AllegroFlare::Elements::AchievementsList
    headers: [ AllegroFlare/Elements/AchievementsList.hpp ]
  - symbol: std::vector<std::tuple<std::string, std::string, std::string>>
    headers: [ vector, tuple, string ]
  - symbol: AllegroFlare::Screens::Base
    headers: [ AllegroFlare/Screens/Base.hpp ]


