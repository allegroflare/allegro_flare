functions:


  - name: build_set_playhead_position_message_json
    type: std::string
    parameters:
      - name: position
        type: float
        default_argument: 0.0f
    body: |
       AllegroFlare::MotionComposer::Messages::SetPlayheadPosition message(position);
       nlohmann::json json;
       json["message"] = message;
       json["message"]["type"] = message.get_type();
       return json.dump(2);
    body_dependency_symbols:
      - nlohmann::json
      - AllegroFlare::JSONLoaders::MotionComposer::Messages::SetPlayheadPosition


  - name: build_toggle_playback_message_json
    type: std::string
    body: |
       AllegroFlare::MotionComposer::Messages::TogglePlayback message;
       nlohmann::json json;
       json["message"] = message;
       json["message"]["type"] = message.get_type();
       return json.dump(2);
    body_dependency_symbols:
      - nlohmann::json
      - AllegroFlare::JSONLoaders::MotionComposer::Messages::TogglePlayback


  - name: build_clear_message_json
    type: std::string
    body: |
       AllegroFlare::MotionComposer::Messages::Clear message;
       nlohmann::json json;
       json["message"] = message;
       json["message"]["type"] = message.get_type();
       return json.dump(2);
    body_dependency_symbols:
      - nlohmann::json
      - AllegroFlare::JSONLoaders::MotionComposer::Messages::Clear


  - name: build_run_build_process_message_json
    type: std::string
    parameters:
      - name: platform
        type: std::string
        default_argument: '"[unset-platform]"'
    body: |
       AllegroFlare::MotionComposer::Messages::RunBuildProcess message(platform);
       nlohmann::json json;
       json["message"] = message;
       json["message"]["type"] = message.get_type();
       return json.dump(2);
    body_dependency_symbols:
      - nlohmann::json
      - AllegroFlare::JSONLoaders::MotionComposer::Messages::RunBuildProcess


  - name: build_add_actor2d_with_script_message_json
    type: std::string
    parameters:
      - name: identifier
        type: std::string
        default_argument: '"[unset-identifier]"'
      - name: bitmap_identifier
        type: std::string
        default_argument: '"[unset-bitmap_identifier]"'
      - name: script
        type: std::string
        default_argument: '"[unset-script]"'
    body: |
       AllegroFlare::MotionComposer::Messages::AddActor2D message(identifier, bitmap_identifier, script);
       nlohmann::json json;
       json["message"] = message;
       json["message"]["type"] = message.get_type();
       return json.dump(2);
    body_dependency_symbols:
      - nlohmann::json
      - AllegroFlare::JSONLoaders::AllegroFlare::MotionComposer::Messages::AddActor2D


dependencies:


  - symbol: AllegroFlare::MotionComposer::Messages::Clear
    headers: [ AllegroFlare/MotionComposer/Messages/Clear.hpp ]
  - symbol: AllegroFlare::JSONLoaders::MotionComposer::Messages::Clear
    headers: [ AllegroFlare/JSONLoaders/MotionComposer/Messages/Clear.hpp ]
  - symbol: AllegroFlare::MotionComposer::Messages::AddActor2D
    headers: [ AllegroFlare/MotionComposer/Messages/AddActor2D.hpp ]
  - symbol: AllegroFlare::JSONLoaders::AllegroFlare::MotionComposer::Messages::AddActor2D
    headers: [ AllegroFlare/JSONLoaders/AllegroFlare/MotionComposer/Messages/AddActor2D.hpp ]
  - symbol: AllegroFlare::MotionComposer::Messages::TogglePlayback
    headers: [ AllegroFlare/MotionComposer/Messages/TogglePlayback.hpp ]
  - symbol: AllegroFlare::JSONLoaders::MotionComposer::Messages::TogglePlayback
    headers: [ AllegroFlare/JSONLoaders/MotionComposer/Messages/TogglePlayback.hpp ]
  - symbol: AllegroFlare::MotionComposer::Messages::SetPlayheadPosition*
    headers: [ AllegroFlare/MotionComposer/Messages/SetPlayheadPosition.hpp ]
  - symbol: AllegroFlare::JSONLoaders::MotionComposer::Messages::SetPlayheadPosition
    headers: [ AllegroFlare/JSONLoaders/MotionComposer/Messages/SetPlayheadPosition.hpp ]
  - symbol: AllegroFlare::JSONLoaders::MotionComposer::Messages::RunBuildProcess
    headers: [ AllegroFlare/JSONLoaders/MotionComposer/Messages/RunBuildProcess.hpp ]
  - symbol: nlohmann::json
    headers: [ lib/nlohmann/json.hpp ]


