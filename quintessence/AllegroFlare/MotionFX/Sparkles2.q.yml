properties:


  - name: bitmap_bin
    type: AllegroFlare::BitmapBin*
    init_with: nullptr
    constructor_arg: true

  - name: x
    type: float
    init_with: 0.0f
    constructor_arg: true
    getter: true
    setter: true

  - name: y
    type: float
    init_with: 0.0f
    constructor_arg: true
    getter: true
    setter: true

  - name: actor_manager
    type: AllegroFlare::Timeline::ActorManager
    init_with: '{}'

  - name: initialized
    type: bool
    init_with: false


functions:


  - name: initialize
    guards: [ (!initialized) ]
    body: |
      // create the actor
      Timeline::Actor2D *actor = new Timeline::Actor2D("foo", obtain_star_bitmap());

      // add the actors to the manager
      actor_manager.set_actors({
         actor
      });

      // one way
      ///AllegroFlare::Timeline::Track *actor_rotation_track = actor->get_param_by_id("rotation");
      //actor_rotation_track->add_keyframe(1.0, 2.0, interpolator::linear);
      //actor_rotation_track->add_keyframe(2.0, -2.0, interpolator::fast_in);


      // another way
      // [time_sec] [param] [value] [!interpoltor]
      std::vector<std::string> script_lines = {
         "0.0 rotation -4.0 linear",
         "2.0 rotation 0.0 tripple_fast_in",
         "0.0 opacity 0.0 linear",
         "0.2 opacity 1.0 linear",
         "0.0 scale_x 0 linear",
         "0.0 scale_y 0 linear",
         "0.7 scale_x 1.2 bounce_out",
         "0.7 scale_y 1.2 bounce_out",
      };
      actor->load_script(script_lines);

      initialized = true;
      return;
    body_dependency_symbols:
      - AllegroFlare::Timeline::Actor2D
      - AllegroFlare::Interpolators::*
      - std::vector<std::string>


  - name: update
    type: void
    guards: [ al_is_system_installed(), al_is_font_addon_initialized(), initialized ]
    body: |
      return;


  - name: render
    type: void
    guards: [ al_is_system_installed(), al_is_font_addon_initialized(), initialized ]
    body: |
      Placement2D place(x, y, 0, 0);
      place.scale.x = 0.5;
      place.scale.y = 0.5;
      place.start_transform();
      actor_manager.render(al_get_time());
      place.restore_transform();
      return;
    body_dependency_symbols:
      - AllegroFlare::Placement2D


  - name: obtain_star_bitmap
    private: true
    type: ALLEGRO_BITMAP*
    guards: [ bitmap_bin ]
    body: |
      return bitmap_bin->auto_get("star-a.png");


dependencies:


  - symbol: AllegroFlare::BitmapBin*
    headers: [ AllegroFlare/BitmapBin.hpp ]
  - symbol: ALLEGRO_BITMAP*
    headers: [ allegro5/allegro_font.h ]
  - symbol: ALLEGRO_FONT*
    headers: [ allegro5/allegro_font.h ]
  - symbol: AllegroFlare::Timeline::ActorManager
    headers: [ AllegroFlare/Timeline/ActorManager.hpp ]
  - symbol: AllegroFlare::Timeline::Actor2D
    headers: [ AllegroFlare/Timeline/Actor2D.hpp ]
  - symbol: AllegroFlare::Placement2D
    headers: [ AllegroFlare/Placement2D.hpp ]
  - symbol: AllegroFlare::Interpolators::*
    headers: [ AllegroFlare/Interpolators.hpp ]


