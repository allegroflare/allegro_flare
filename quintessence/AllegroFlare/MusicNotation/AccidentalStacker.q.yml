properties:


  - name: pitches
    type: std::vector<AllegroFlare::MusicNotation::Parser::PitchToken>
    init_with: '{}'
    constructor_arg: true
    getter: true
    setter: false

  - name: stack
    type: std::vector<std::pair<AllegroFlare::MusicNotation::AccidentalStacker::AccidentalType, std::pair<int, int>>>
    init_with: '{}'
    constructor_arg: true
    getter: explicit
    setter: true

  - name: solved
    type: bool
    init_with: false
    constructor_arg: true
    getter: true
    setter: true


enums:


  - name: AccidentalType
    scope: public
    enumerators:
      - UNDEFINED
      - SHARP
      - FLAT
      - NATURAL


methods:


  - name: set_pitches
    parameters:
      - name: pitches
        type: const std::vector<AllegroFlare::MusicNotation::Parser::PitchToken>&
        default_argument: '{}'
    body: |
      this->pitches = pitches;
      solved = false;
      return;


  - name: get_stack
    type: std::vector<std::pair<AllegroFlare::MusicNotation::AccidentalStacker::AccidentalType, std::pair<int, int>>>
    guards: [ solved ]
    body: |
      return stack;


  - name: solve
    body: |
      //std::vector<std::pair<AccidentalType, std::pair<int, int>>> result;
      //return result;
      solved = true;
      return;


dependencies:


  - symbol: AllegroFlare::MusicNotation::AccidentalStacker::AccidentalType
    headers: [ ]
  - symbol: AllegroFlare::MusicNotation::Parser::PitchToken
    headers: [ AllegroFlare/MusicNotation/Parser/PitchToken.hpp ]


