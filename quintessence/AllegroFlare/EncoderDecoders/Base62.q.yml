properties:


  - name: CHARACTERS_LOWERCASE_FIRST
    type: std::string
    const: true
    static: true
    init_with: '"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"'
    constructor_arg: false


functions:


  - name: encode
    type: std::string
    parameters:
      - name: value
        type: int
        default_argument: 0
    body: |
       std::string str;

       do
       {
          str.insert(0, std::string(1, CHARACTERS_LOWERCASE_FIRST[value % 62]));
          value /= 62;
       }
       while (value > 0);

       return str;


  - name: decode
    type: int
    parameters:
      - name: value
        type: std::string
        default_argument: '"0"'
    body: |
       std::reverse(value.begin(), value.end());

       int ret = 0;
       int count = 1;
       for (char& character : value)
       {
          ret += CHARACTERS_LOWERCASE_FIRST.find(character) * count;
          count *= 62;
       }

       return ret;


