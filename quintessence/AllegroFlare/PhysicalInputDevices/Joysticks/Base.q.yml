parent_classes:


  - class: AllegroFlare::PhysicalInputDevices::Base
    scope: public
    init_with: 'AllegroFlare::PhysicalInputDevices::Joysticks::Base::TYPE, "Generic Joystick"'


properties:


  - name: al_joystick
    type: ALLEGRO_JOYSTICK*
    init_with: nullptr
    getter: true

  - name: name
    type: std::string
    init_with: '""'
    getter: true

  - name: buttons
    type: std::map<uint32_t, std::string>
    init_with: '{}'
    getter: true

  - name: has_been_setup
    type: bool
    init_with: false

  - name: TYPE
    type: char*
    init_with: '(char*)"AllegroFlare/PhysicalInputDevices/Joysticks/Base"'
    static: true
    constexpr: true


functions:


  - name: set_al_joystick
    parameters:
      - name: al_joystick
        type: ALLEGRO_JOYSTICK*
        default_argument: nullptr
    guards: [ (!has_been_setup) ]
    body: |
      this->al_joystick = al_joystick;
      return;


  - name: get_name
    type: std::string
    guards: [ has_been_setup ]
    body: |
      return name;


  - name: get_buttons
    type: std::map<uint32_t, std::string>
    guards: [ has_been_setup ]
    body: |
      return buttons;


  - name: setup
    type: bool
    guards: [ al_joystick ]
    body: |
      // Grab the joystick name
      name = al_get_joystick_name(al_joystick);

      // Grab the buttons and their names
      int num_buttons = al_get_joystick_num_buttons(al_joystick);
      for (int i=0; i<num_buttons; i++)
      {
         buttons[i] = al_get_joystick_button_name(al_joystick, i);
      }

      // TODO: consider the following data
      //al_get_joystick_active
      //al_get_joystick_name
      //al_get_joystick_stick_name
      //al_get_joystick_axis_name
      //al_get_joystick_button_name
      //al_get_joystick_stick_flags
      //al_get_joystick_num_sticks
      //al_get_joystick_num_axes
      //al_get_joystick_num_buttons
      //al_get_joystick_state

      has_been_setup = true;
      return true;


  - name: is_joystick
    type: bool
    virtual: true
    override: true
    body: |
      return true;


  - name: is_using_al_joystick
    type: bool
    parameters:
      - name: possibly_same_al_joystick
        type: ALLEGRO_JOYSTICK*
        default_argument: nullptr
    body: |
      return (possibly_same_al_joystick == al_joystick);


dependencies:


  - symbol: AllegroFlare::PhysicalInputDevices::Base
    headers: [ AllegroFlare/PhysicalInputDevices/Base.hpp ]
  - symbol: ALLEGRO_JOYSTICK
    headers: [ allegro5/allegro.h ]


