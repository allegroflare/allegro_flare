functions:


  - name: get_test_name
    static: true
    type: std::string
    body: |
      const testing::TestInfo* const test_info = testing::UnitTest::GetInstance()->current_test_info();
      return test_info->name();
    body_dependency_symbols:
      - ::testing::Test


  - name: get_test_suite_name
    static: true
    type: std::string
    body: |
      const testing::TestInfo* const test_info = testing::UnitTest::GetInstance()->current_test_info();
      return test_info->test_suite_name();


  - name: build_full_test_name_str
    static: true
    type: std::string
    body: |
      return get_test_suite_name() + " - " + get_test_name();


  - name: build_test_snapshot_full_filename
    static: true
    type: std::string
    body: |
      // Concede that this is relative and does assume that the folder exists.  In the future, these result
      // snapshots should be stored in a specific folder for *each build*.  This will accumulate over time, so might
      // need to be cleaned occasionally.  This should also detect if there is a png file with the name already
      // present, and appnd a (2) after it.
      return "./tmp/test_snapshots/" + build_full_test_name_str() + ".png";


dependencies:


  - symbol: ::testing::Test
    headers: [ gtest/gtest.h ]


