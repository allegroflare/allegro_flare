properties:


  - name: type
    type: std::string
    init_with: AllegroFlare::GameConfigurations::Base::TYPE
    constructor_arg: true
    getter: true

  - name: TYPE
    type: char*
    init_with: '(char*)"AllegroFlare/GameConfigurations/Base"'
    static: true
    constexpr: true


methods:


  - name: load_level_by_identifier
    virtual: true
    type: void*
    parameters:
      - name: level_identifier
        type: std::string
        default_argument: '"[unset-level_identifier]"'
    body: |
      // TODO: Add tests for this method or consider making it a pure virtual
      AllegroFlare::Logger::throw_error(
         "AllegroFlare::GameConfigurations::Base::load_level_by_identifier"
         "Not implemented in the base class. This method must be implemented in the derived class"
      );
      return nullptr;
    body_dependency_symbols:
     - AllegroFlare::Logger


  - name: build_level_list_for_level_select_screen_by_identifier
    virtual: true
    type: std::vector<std::pair<std::string, std::string>>
    parameters:
      - name: identifier
        type: std::string
        default_argument: '"[unset-identifier]"'
    body: |
      // TODO: Add tests for this method or consider making it a pure virtual
      AllegroFlare::Logger::throw_error(
         "AllegroFlare::GameConfigurations::Base::build_level_list_for_level_select_screen_by_identifier"
         "Not implemented in the base class. This method must be implemented in the derived class"
      );
      return {};
    body_dependency_symbols:
     - AllegroFlare::Logger


  - name: build_dialog_bank_by_identifier
    virtual: true
    type: AllegroFlare::DialogTree::NodeBank
    parameters:
      - name: identifier
        type: std::string
        default_argument: '"[unset-identifier]"'
    body: |
      // TODO: Add tests for this method or consider making it a pure virtual
      AllegroFlare::DialogTree::NodeBank node_bank;
      AllegroFlare::Logger::throw_error(
         "AllegroFlare::GameConfigurations::Base::build_dialog_bank_by_identifier",
         "Not implemented in the base class. This method must be implemented in the derived class"
      );
      return node_bank;
    body_dependency_symbols:
     - AllegroFlare::Logger


  - name: is_type
    type: bool
    parameters:
      - name: possible_type
        type: std::string
        default_argument: '""'
    body: |
      return (possible_type == get_type());


dependencies:


  - symbol: AllegroFlare::DialogTree::NodeBank
    headers: [ AllegroFlare/DialogTree/NodeBank.hpp ]
  - symbol: AllegroFlare::Logger
    headers: [ AllegroFlare/Logger.hpp ]


